{"version":3,"file":"js/app.9c20a57b.js","mappings":"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","sources":["webpack://s2g-parser-generator/./src/utils/prism-setup.js","webpack://s2g-parser-generator/./src/constants/parser.js","webpack://s2g-parser-generator/./src/composables/useParser.js","webpack://s2g-parser-generator/./src/utils/validation.js","webpack://s2g-parser-generator/./src/composables/useFields.js","webpack://s2g-parser-generator/./src/components/FormatDetector.vue","webpack://s2g-parser-generator/./src/components/FormatDetector.vue?8c3b","webpack://s2g-parser-generator/./src/components/help/HelpSidebarDe.vue","webpack://s2g-parser-generator/./src/components/help/HelpSidebarDe.vue?c69a","webpack://s2g-parser-generator/./src/components/help/HelpSidebarEn.vue","webpack://s2g-parser-generator/./src/components/help/HelpSidebarEn.vue?cf9b","webpack://s2g-parser-generator/./src/components/help/HelpSidebar.vue","webpack://s2g-parser-generator/./src/components/help/HelpSidebar.vue?d705","webpack://s2g-parser-generator/./src/utils/github.js","webpack://s2g-parser-generator/./src/components/ParserRepository.vue","webpack://s2g-parser-generator/./src/components/ParserRepository.vue?5b37","webpack://s2g-parser-generator/./src/composables/useUI.js","webpack://s2g-parser-generator/./src/utils/file.js","webpack://s2g-parser-generator/./src/composables/useFileHandler.js","webpack://s2g-parser-generator/./src/composables/useIniGenerator.js","webpack://s2g-parser-generator/./src/components/DynamicSidebar.vue","webpack://s2g-parser-generator/./src/components/ParserSection.vue","webpack://s2g-parser-generator/./src/components/ParserSection.vue?5d4b","webpack://s2g-parser-generator/./src/components/FieldSection.vue","webpack://s2g-parser-generator/./src/components/FieldSection.vue?fb7e","webpack://s2g-parser-generator/./src/components/AddFieldButton.vue","webpack://s2g-parser-generator/./src/components/AddFieldButton.vue?694a","webpack://s2g-parser-generator/./src/App.vue","webpack://s2g-parser-generator/./src/App.vue?7ccd","webpack://s2g-parser-generator/./src/i18n/messages/field/de.js","webpack://s2g-parser-generator/./src/i18n/messages/format/de.js","webpack://s2g-parser-generator/./src/i18n/messages/navigation/de.js","webpack://s2g-parser-generator/./src/i18n/messages/parser/de.js","webpack://s2g-parser-generator/./src/i18n/locales/de.js","webpack://s2g-parser-generator/./src/i18n/messages/field/en.js","webpack://s2g-parser-generator/./src/i18n/messages/format/en.js","webpack://s2g-parser-generator/./src/i18n/messages/navigation/en.js","webpack://s2g-parser-generator/./src/i18n/messages/parser/en.js","webpack://s2g-parser-generator/./src/i18n/locales/en.js","webpack://s2g-parser-generator/./src/i18n/index.js","webpack://s2g-parser-generator/./src/main.js","webpack://s2g-parser-generator/webpack/bootstrap","webpack://s2g-parser-generator/webpack/runtime/chunk loaded","webpack://s2g-parser-generator/webpack/runtime/compat get default export","webpack://s2g-parser-generator/webpack/runtime/define property getters","webpack://s2g-parser-generator/webpack/runtime/global","webpack://s2g-parser-generator/webpack/runtime/hasOwnProperty shorthand","webpack://s2g-parser-generator/webpack/runtime/jsonp chunk loading","webpack://s2g-parser-generator/webpack/startup"],"sourcesContent":["import Prism from 'prismjs'\n\nexport const setupPrism = () => {\n  // Define custom language for INI files\n  Prism.languages.ini = {\n    'comment': /#.*/,\n    'section': {\n      pattern: /^\\s*\\[.*?\\]/m,\n      inside: {\n        'section-name': {\n          pattern: /\\[.*?\\]/,\n          inside: {\n            'punctuation': /\\[|\\]/\n          }\n        }\n      }\n    },\n    'key': {\n      pattern: /^\\s*[^\\s=]+(?=\\s*=)/m,\n      alias: 'attr-name'\n    },\n    'value': {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        'punctuation': /^=/,\n        'number': /\\b\\d+\\.?\\d*\\b/,\n        'boolean': /\\b(?:yes|no|true|false)\\b/i,\n        'string': /'[^']*'|\"[^\"]*\"|[^=\\s]+/,\n        'type': /\\b(?:integer|double|text)\\b/i\n      }\n    }\n  }\n\n  // Add custom styling\n  const additionalStyles = `\n    .token.number {\n      color: #f08d49 !important;\n    }\n    .token.boolean {\n      color: #7ec699 !important;\n    }\n    .token.string {\n      color: #f1fa8c !important;\n    }\n    .token.type {\n      color: #bd93f9 !important;\n    }\n    .token.section {\n      color: #79b8ff !important;\n    }\n    .token.key {\n      color: #e1e4e8 !important;\n    }\n    .token.value {\n      color: #85e89d !important;\n    }\n    .token.comment {\n      color: #959da5 !important;\n      font-style: italic;\n    }\n  `\n\n  // Add styles to document head\n  const styleElement = document.createElement('style')\n  styleElement.textContent = additionalStyles\n  document.head.appendChild(styleElement)\n}\n\n// Optional: Add a function to highlight specific elements\nexport const highlightElement = (element) => {\n  if (element) {\n    Prism.highlightElement(element)\n  }\n}\n\n// Optional: Add a function to highlight all code blocks\nexport const highlightAll = () => {\n  document.querySelectorAll('pre code').forEach((block) => {\n    Prism.highlightElement(block)\n  })\n}\n\n// Optional: Add a function to clean up Prism (if needed)\nexport const cleanupPrism = () => {\n  // Remove custom styles\n  const customStyles = document.querySelector('style[data-prism-custom]')\n  if (customStyles) {\n    customStyles.remove()\n  }\n}","export const MANDATORY_FIELDS = {\n  parser: ['name', 'coor_x', 'coor_y', 'coor_z'],\n  field: ['name', 'type']\n}\n\nexport const DEFAULT_VALUES = {\n  comment_mark: '#',\n  coor_x: 'COORX',\n  coor_y: 'COORY',\n  coor_z: 'COORZ',\n  geom_tag_point: '.',\n  geom_tag_line: '$',\n  geom_tag_poly: '@',\n  no_data: '-1'\n}\n\nexport const DEFAULT_FIELD = {\n  name: '',\n  change_case: 'lower',\n  empty_allowed: 'no',\n  info: '',\n  merge_separators: 'no',\n  persistent: 'no',\n  quotation: \"'\",\n  skip: 'no',\n  separator: ';',\n  type: 'text',\n  unique: 'no',\n  aliases: ''\n}","import { DEFAULT_VALUES } from '../constants/parser'\nimport { ref } from 'vue'\n\nexport function useParser() {\n  const parserSection = ref({\n    info: '',\n    name: '',\n    comment_mark: DEFAULT_VALUES.comment_mark,\n    coor_x: DEFAULT_VALUES.coor_x,\n    coor_y: DEFAULT_VALUES.coor_y,\n    coor_z: DEFAULT_VALUES.coor_z,\n    geom_tag_point: DEFAULT_VALUES.geom_tag_point,\n    geom_tag_line: DEFAULT_VALUES.geom_tag_line,\n    geom_tag_poly: DEFAULT_VALUES.geom_tag_poly,\n    key_field: '',\n    key_unique: 'No',\n    no_data: DEFAULT_VALUES.no_data,\n    tag_field: '',\n    tagging_mode: 'none',\n    tag_strict: 'No'\n  })\n\n  const resetParser = () => {\n    Object.keys(parserSection.value).forEach(key => {\n      parserSection.value[key] = DEFAULT_VALUES[key] || ''\n    })\n  }\n\n  return {\n    parserSection,\n    resetParser\n  }\n}","export const validateFieldName = (name) => {\n    const errors = []\n    if (name.length > 10) {\n      errors.push('Field name must be 10 characters or less')\n    }\n    if (!/^[A-Za-z0-9_]*$/.test(name)) {\n      errors.push('Field name can only contain letters, numbers, and underscores')\n    }\n    return errors\n  }\n  \nexport const validateAliases = (aliases) => {\n  if (!aliases) return null\n\n  const lines = aliases.split('\\n').filter(line => line.trim())\n  const lowercaseKeys = new Set()\n\n  for (const line of lines) {\n    if (!line.startsWith('@')) {\n      return 'Each line must start with @'\n    }\n\n    // Find the first = sign to split key and value\n    const equalIndex = line.indexOf('=')\n    if (equalIndex === -1) {\n      return 'Each line must be in format @key=value'\n    }\n\n    // Extract key and value, allowing spaces around =\n    const keyPart = line.substring(1, equalIndex).trim()\n    const value = line.substring(equalIndex + 1).trim()\n    \n    if (!keyPart || !value) {\n      return 'Each line must be in format @key=value'\n    }\n\n    // Check requirement: \"no whitespace between @ and old\"\n    const keyWithoutTrim = line.substring(1, equalIndex)\n    if (keyWithoutTrim.startsWith(' ') || keyWithoutTrim.startsWith('\\t')) {\n      return 'There must be no whitespace between @ and the key'\n    }\n\n    // Check value length requirement (254 ASCII characters max)\n    if (value.length > 254) {\n      return 'Replacement text must not be longer than 254 characters'\n    }\n\n    // Check for duplicate keys (case insensitive as per requirements)\n    const lowercaseKey = keyPart.toLowerCase()\n    if (lowercaseKeys.has(lowercaseKey)) {\n      return `Duplicate key found: ${keyPart}`\n    }\n    lowercaseKeys.add(lowercaseKey)\n  }\n\n  return null\n}","import { validateAliases, validateFieldName } from '../utils/validation'\n\nimport { DEFAULT_FIELD } from '../constants/parser'\nimport { ref } from 'vue'\n\nexport function useFields() {\n  const fieldSections = ref([])\n  const validationErrors = ref({})\n\n  const cleanupValidationErrors = (removedIndex) => {\n    // Create new object to store shifted errors\n    const newErrors = {}\n\n    Object.entries(validationErrors.value).forEach(([key, value]) => {\n      const fieldMatch = key.match(/field-(\\d+)/)\n      if (fieldMatch) {\n        const fieldIndex = parseInt(fieldMatch[1])\n        \n        // Skip errors for the removed field\n        if (fieldIndex === removedIndex) {\n          return\n        }\n\n        // Keep errors for fields before the removed one\n        if (fieldIndex < removedIndex) {\n          newErrors[key] = value\n          return\n        }\n\n        // Shift errors for fields after the removed one\n        if (fieldIndex > removedIndex) {\n          const newIndex = fieldIndex - 1\n          const newKey = key.replace(`field-${fieldIndex}`, `field-${newIndex}`)\n          newErrors[newKey] = value\n        }\n      }\n    })\n\n    validationErrors.value = newErrors\n  }\n\n  const removeFieldSection = (fieldIndex) => {\n    fieldSections.value.splice(fieldIndex, 1)\n    cleanupValidationErrors(fieldIndex)\n  }\n\n  const validateField = (fieldIndex, fieldName, value) => {\n    const errorKey = fieldName === 'aliases' \n      ? `field-${fieldIndex}-aliases`\n      : `field-${fieldIndex}`\n\n    // Clear existing error for this field\n    const newErrors = { ...validationErrors.value }\n    delete newErrors[errorKey]\n\n    // Perform validation\n    if (fieldName === 'aliases') {\n      const aliasError = value ? validateAliases(value) : null\n      if (aliasError) {\n        newErrors[errorKey] = aliasError\n      }\n    } else {\n      const errors = validateFieldName(value)\n      if (errors.length > 0) {\n        newErrors[errorKey] = errors\n      }\n    }\n\n    validationErrors.value = newErrors\n  }\n\n  const addFieldSection = () => {\n    const newIndex = fieldSections.value.length\n    fieldSections.value.push({ ...DEFAULT_FIELD })\n    return newIndex\n  }\n\n  return {\n    fieldSections,\n    validationErrors,\n    validateField,\n    addFieldSection,\n    removeFieldSection\n  }\n}","<template>\n    <div class=\"p-6\">\n      <h2 class=\"text-xl font-semibold mb-4\">{{ $t('format.title') }}</h2>\n  \n      <!-- Input Area -->\n      <div class=\"mb-6\">\n        <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n          {{ $t('format.paste_label') }}\n        </label>\n        <textarea \n          v-model=\"inputData\"\n          rows=\"10\"\n          class=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          :placeholder=\"$t('format.placeholder')\"\n        ></textarea>\n      </div>\n  \n      <!-- Analyze Button -->\n      <button\n        @click=\"analyzeFormat\"\n        class=\"cursor-pointer px-6 py-3 bg-gray-700 text-white rounded-full hover:bg-blue-700 transition-colors shadow-lg hover:shadow-xl\"\n        :disabled=\"!inputData\"\n      >\n        {{ $t('format.analyze') }}\n      </button>\n  \n      <!-- Results -->\n      <div v-if=\"result\" class=\"mt-6 p-4 bg-gray-50 rounded-md space-y-4\">\n        <h3 class=\"font-medium text-lg mb-3\">{{ $t('format.results') }}</h3>\n        \n        <div class=\"space-y-2\">\n          <p class=\"text-sm\">\n            <span class=\"font-medium\">{{ $t('format.detected_mode') }}:</span> \n            <span class=\"text-blue-600\"> {{ result.mode }}</span>\n          </p>\n          <p class=\"text-sm\">\n            <span class=\"font-medium\">{{ $t('format.explanation') }}:</span>\n            <span class=\"ml-1\">{{ result.explanation }}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"FormatDetector\",\n    data() {\n      return {\n        inputData: \"\",\n        result: null, // To store the final result\n      };\n    },\n    methods: {\n      analyzeFormat() {\n        console.log(\"Starting format analysis...\");\n        console.log(\"Raw input data:\", this.inputData);\n  \n        // Split and clean input lines\n        let lines = this.inputData.split('\\n').filter(line => line.trim());\n        console.log(\"Input after splitting and cleaning:\", lines);\n  \n        // Remove comments and descriptive lines\n        lines = lines.filter(line => {\n          const isComment = line.trim().startsWith('#');\n          const isDescriptive = !/\\d/.test(line); // Remove lines without numeric data\n          console.log(`Analyzing line: \"${line}\" - Is comment: ${isComment}, Is descriptive: ${isDescriptive}`);\n          return !(isComment || isDescriptive);\n        });\n        console.log(\"Filtered lines after removing comments/descriptions:\", lines);\n  \n        // Check for End mode\n        console.log(\"Checking for End mode...\");\n        if (this.isEndMode(lines)) {\n          console.log(\"End mode detected!\");\n          this.result = {\n            mode: 'End',\n            explanation: 'The data follows the End mode pattern.',\n          };\n          return;\n        } else {\n          console.log(\"End mode not detected.\");\n        }\n  \n        // Check for Min mode\n        console.log(\"Checking for Min mode...\");\n        if (this.isMinMode(lines)) {\n          console.log(\"Min mode detected!\");\n          this.result = {\n            mode: 'Min',\n            explanation: 'The data follows the Min mode pattern.',\n          };\n          return;\n        } else {\n          console.log(\"Min mode not detected.\");\n        }\n  \n        // Check for Max mode\n        console.log(\"Checking for Max mode...\");\n        if (this.isMaxMode(lines)) {\n          console.log(\"Max mode detected!\");\n          this.result = {\n            mode: 'Max',\n            explanation: 'The data follows the Max mode pattern.',\n          };\n          return;\n        } else {\n          console.log(\"Max mode not detected.\");\n        }\n  \n        // Default to None mode\n        console.log(\"No valid mode detected. Defaulting to None mode.\");\n        this.result = {\n          mode: 'None',\n          explanation: 'The data format could not be determined.',\n        };\n      },\n  \n      isEndMode(lines) {\n        console.log(\"=== Checking for End mode ===\");\n        let currentKeyField = null;\n        let isEndMode = false;\n  \n        for (const [index, line] of lines.entries()) {\n          console.log(`Processing line ${index + 1}: \"${line}\"`);\n  \n          const parts = line.trim().split(/\\s+/);\n          if (parts.length < 4) {\n            console.log(`Line rejected - Not enough parts.`);\n            continue; // Skip invalid lines but continue processing other lines\n          }\n  \n          const [keyFieldWithMarker, ...coords] = parts;\n          const hasMarker = keyFieldWithMarker.includes('@');\n  \n          // Extract the last 3 parts as coordinates and validate\n          const lastThreeParts = coords.slice(-3);\n          if (lastThreeParts.length !== 3 || lastThreeParts.some(part => isNaN(parseFloat(part)))) {\n            console.log(`Line skipped due to missing or invalid coordinates.`);\n            continue;\n          }\n  \n          if (hasMarker) {\n            isEndMode = true;\n          }\n  \n          if (!hasMarker && currentKeyField === null) {\n            // Skip initial non-marker lines but continue processing others\n            continue;\n          }\n  \n          if (hasMarker) {\n            currentKeyField = null; // Reset for next geometry\n          }\n        }\n  \n        console.log(`End mode detection result: ${isEndMode}`);\n        return isEndMode;\n      },\n  \n      isMinMode(lines) {\n        console.log(\"=== Checking for Min mode ===\");\n        let isPolygonDetected = false;\n        let reducedRecordDetected = false;\n  \n        for (const [index, line] of lines.entries()) {\n          console.log(`Processing line ${index + 1}: \"${line}\"`);\n  \n          const parts = line.trim().split(/\\s+/);\n  \n          if (line.includes('@')) {\n            console.log(`Line contains '@': \"${line}\"`);\n            isPolygonDetected = true;\n          } else if (isPolygonDetected) {\n            const isReducedRecord = parts.every(part => !isNaN(parseFloat(part)));\n            if (isReducedRecord) {\n              console.log(`Line recognized as reduced record: \"${line}\"`);\n              reducedRecordDetected = true;\n            } else {\n              console.log(`Line does not match reduced record: \"${line}\"`);\n              break;\n            }\n          }\n        }\n  \n        const isMinMode = isPolygonDetected && reducedRecordDetected;\n        console.log(`Min mode detection result: ${isMinMode}`);\n        return isMinMode;\n      },\n  \n      isMaxMode(lines) {\n        console.log(\"=== Checking for Max mode ===\");\n  \n        if (lines.length === 0) {\n          console.log(\"No lines to process. Failing Max mode check.\");\n          return false;\n        }\n  \n        let sharedCode = null; // Store shared code to validate consistency\n  \n        for (const [index, line] of lines.entries()) {\n          console.log(`Processing line ${index + 1}: \"${line}\"`);\n  \n          const parts = line.trim().split(/\\s+/);\n          console.log(`Split line into parts:`, parts);\n  \n          // Validate line structure\n          if (parts.length < 6) {\n            console.log(`Line rejected - Not enough parts (found ${parts.length}, expected at least 6).`);\n            continue; // Skip invalid lines but continue processing other lines\n          }\n  \n          // Extract components\n          const lineNumber = parts[0]; // Must be an integer\n          const keyField = parts[2]; // The field that contributes to the shared code\n          const geometryMarker = parts[3]; // Must be \"@\"\n          const coordinates = parts.slice(4); // The remaining are coordinates\n  \n          // Extract the last 3 parts as coordinates and validate\n          const lastThreeParts = coordinates.slice(-3);\n          if (lastThreeParts.length !== 3 || lastThreeParts.some(part => isNaN(parseFloat(part)))) {\n            console.log(`Line skipped due to missing or invalid coordinates.`);\n            continue; // Skip invalid lines but continue processing other lines\n          }\n  \n          // Validate line number (must be an integer)\n          if (isNaN(parseInt(lineNumber, 10))) {\n            console.log(`Line rejected - Line number \"${lineNumber}\" is not an integer.`);\n            continue; // Skip invalid lines but continue processing other lines\n          }\n  \n          // Validate the geometry marker\n          if (geometryMarker !== \"@\") {\n            console.log(`Line rejected - Missing or incorrect '@' marker: \"${geometryMarker}\".`);\n            continue; // Skip invalid lines but continue processing other lines\n          }\n  \n          // Check if we have a shared code, set for validation\n          if (sharedCode === null) {\n            sharedCode = keyField;\n          } else if (sharedCode !== keyField) {\n            console.log(`Shared code mismatch: Expected \"${sharedCode}\", but found \"${keyField}\".`);\n            return false;\n          }\n        }\n  \n        const isMaxMode = sharedCode !== null;\n        console.log(`Max mode detection result: ${isMaxMode}`);\n        return isMaxMode;\n      },\n    },\n  };\n  </script>\n  ","import { render } from \"./FormatDetector.vue?vue&type=template&id=5e3b17fb\"\nimport script from \"./FormatDetector.vue?vue&type=script&lang=js\"\nexport * from \"./FormatDetector.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"h-screen flex flex-col \">\n    <!-- Tab Navigation -->\n    <div class=\"bg-white border-b border-gray-200\">\n      <div class=\"flex\">\n        <button \n          class=\"flex-1 px-4 py-3 text-sm font-medium transition-colors border-b-2\"\n          :class=\"activeTab === 'introduction' ? 'text-blue-600 border-blue-600 bg-blue-50' : 'text-gray-600 border-transparent hover:text-gray-900 hover:bg-gray-50'\"\n          @click=\"activeTab = 'introduction'\"\n        >\n          Einführung\n        </button>\n        <button \n          class=\"flex-1 px-4 py-3 text-sm font-medium transition-colors border-b-2\"\n          :class=\"activeTab === 'interface' ? 'text-blue-600 border-blue-600 bg-blue-50' : 'text-gray-600 border-transparent hover:text-gray-900 hover:bg-gray-50'\"\n          @click=\"activeTab = 'interface'\"\n        >\n          Website-Oberfläche\n        </button>\n        <button \n          class=\"flex-1 px-4 py-3 text-sm font-medium transition-colors border-b-2\"\n          :class=\"activeTab === 'parser' ? 'text-blue-600 border-blue-600 bg-blue-50' : 'text-gray-600 border-transparent hover:text-gray-900 hover:bg-gray-50'\"\n          @click=\"activeTab = 'parser'\"\n        >\n          Parser definieren\n        </button>\n      </div>\n    </div>\n\n    <!-- Tab Content -->\n    <div class=\"flex-1  p-6\">\n      \n      <!-- Introduction Content -->\n      <div v-show=\"activeTab === 'introduction'\">\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-3\">Survey2GIS Parser Builder</h2>\n        <p class=\"text-gray-600 mb-6\">\n          Dieses Werkzeug hilft Ihnen, Parser-Dateien zu erstellen, die es Survey2GIS ermöglichen, Ihre Tachymeter-Daten in Shapefiles, GeoJSON und andere GIS-Formate zu konvertieren.\n        </p>\n\n        <div class=\"border-blue-500 rounded mb-6\">\n          <h5 class=\"font-semibold text-blue-900 mb-3\">Was ist eine Parser-Datei?</h5>\n          <p class=\"text-sm mb-4\">\n            Eine Parser-Datei ist eine Konfiguration, die Survey2GIS mitteilt, wie Ihre Tachymeter-Daten gelesen und interpretiert werden sollen. <br>\n            Sie definiert, welche Spalten Koordinaten enthalten, welche Zeichen verschiedene Geometrietypen markieren und wie die Messungen verarbeitet werden.\n          </p>\n          \n          <h6 class=\"font-semibold text-blue-900 mb-2 text-sm\">Kompatibel mit:</h6>\n          <ul class=\"space-y-2 text-sm\">\n            <li>\n              <strong>Kommandozeilen-Tool:</strong> \n              <a href=\"https://github.com/survey2gis/survey-tools\" class=\"text-blue-700 hover:underline underline ml-1\" target=\"_blank\" rel=\"noopener noreferrer\">\n                github.com/survey2gis/survey-tools\n              </a>\n            </li>\n            <li>\n              <strong>QGIS Plugin:</strong> \n              <a href=\"https://plugins.qgis.org/plugins/s2g_data_processor/\" class=\"text-blue-700 hover:underline underline ml-1\" target=\"_blank\" rel=\"noopener noreferrer\">\n                S2G Data Processor\n              </a>\n            </li>\n          </ul>\n          \n          <div class=\"mt-4 pt-4 border-t border-blue-200\">\n            <p class=\"text-sm text-blue-800 mb-1\">\n              <strong>Vollständige Dokumentation:</strong>\n            </p>\n            <a href=\"https://s2g-docs.survey-tools.org/parser-schema.html\" class=\"text-blue-700 hover:text-blue-600 font-medium underline text-sm\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Parser Schema Dokumentation\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <!-- Interface Content -->\n      <div v-show=\"activeTab === 'interface'\">\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Die Benutzeroberfläche verstehen</h2>\n\n        <div class=\"space-y-4\">\n          <div class=\"bg-white rounded-lg shadow-sm p-5\">\n            <h5 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n              <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold\">1</span>\n              Die Navigationsleiste\n            </h5>\n            <p class=\"text-gray-600 mb-3\">\n                <img src=\"img/nav.jpeg\" alt=\"Survey2GIS Navigation\" class=\"border mb-3\">\n\n                Von links nach rechts:\n                <ol class=\"list-decimal list-inside space-y-1 mt-2\">\n                  <li>Logo und Home-Button - Klicken Sie hier, um zur Startseite zurückzukehren</li>\n                  <li>Auswahl für:\n                    <ul class=\"list-disc list-inside pl-6\">\n                      <li>Hochladen einer Parser-Datei, die lokal auf Ihrer Festplatte gespeichert ist</li>\n                      <li>Laden einer Beispiel-Parser-Datei zu Lernzwecken</li>\n                      <li>Durchsuchen der Community-Parser-Bibliothek nach geteilten Konfigurationen</li>\n                    </ul>\n                  </li>\n                  <li>Zwischen deutscher und englischer Sprache wechseln</li>\n                  <li>Impressum dieser Website</li>\n                  <li>Diese Hilfe öffnen</li>\n                </ol>\n            </p>\n          </div>\n\n          <div class=\"bg-white rounded-lg shadow-sm p-5\">\n            <h5 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n              <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold\">2</span>\n              Einen neuen Parser starten\n            </h5>\n            <p class=\"text-gray-600 mb-3\">\n                Klicken Sie auf der linken Seite auf die folgende Schaltfläche, um eine neue Parser-Konfiguration zu starten.\n            </p>\n            <img src=\"img/start_new.jpeg\" alt=\"Neuen Parser starten\" class=\"border mb-3\">\n            <p class=\"text-gray-600\">\n                Sie sehen Ihren definierten Parser in der Live-Vorschau auf der rechten Seite.\n            </p>\n            <img src=\"img/parser_definition.jpeg\" alt=\"Parser GUI\" class=\"border mt-2 mb-2\">\n            <p class=\"text-gray-600 text-sm\">\n                Für weitere Informationen besuchen Sie den nächsten Tab \"Parser definieren\".\n            </p>\n          </div>\n\n          <div class=\"bg-white rounded-lg shadow-sm p-5\">\n            <h5 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n              <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold\">3</span>\n              Parser-Repository\n            </h5>\n            <p class=\"text-gray-600 mb-3\">\n                Durch Auswahl der Option \"Community-Parser durchsuchen\" in der Navigationsleiste können Sie auf das Parser-Repository zugreifen.\n            </p>\n            <img src=\"img/parser_repository.jpeg\" alt=\"Parser Repository\" class=\"border mb-2\">\n            <p class=\"text-gray-600 text-sm\">\n                Hier können Sie nach von der Community geteilten Parsern suchen. Sie können nach Namen filtern.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Parser Content -->\n<div v-show=\"activeTab === 'parser'\">\n  <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Wie man einen Parser definiert</h2>\n  <p class=\"text-gray-600 mb-6\">Parser-Modi verstehen und Ihre Parser-Datei konfigurieren.</p>\n\n  <!-- Understanding Parser Modes -->\n  <div class=\"bg-white rounded-lg shadow-sm p-5 mb-4\">\n    <h4 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n      <span class=\"bg-purple-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0\">1</span>\n      <span>Parser-Modi verstehen</span>\n    </h4>\n    <p class=\"text-gray-600 text-sm mb-4\">\n      Bevor Sie Ihren Parser erstellen, sollten Sie verstehen, wie Ihre Tachymeter-Daten strukturiert sind. \n      Wählen Sie den Modus, der zu Ihrem Datenformat passt.\n    </p>\n\n    <div class=\"space-y-4\">\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Modus: \"Min\" (Minimale Codierung)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\nReduziert den Aufwand beim Aufnehmen. Nur der erste Punkt einer Linie oder Fläche braucht vollständige Angaben - die folgenden Punkte nicht mehr.        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Beispiel:</p>\n          <pre class=\"text-xs text-gray-700\">1 polygon 1<span class=\"bg-red-200\"> @ </span>10.00 10.00 1.00\n10.00 20.00 1.05\n20.00 20.00 1.10</pre>\n        </div>\n      </div>\n\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Modus: \"Max\" (Maximale Kontrolle)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\n          Jede Messung muss ein Geometrie-Tag haben. Jeder Stützpunkt hat vollständige Attribute. Erfordert ein separates Schlüsselfeld.\n        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Beispiel:</p>\n          <pre class=\"text-xs text-gray-700\">1 polygon 1<span class=\"bg-red-200\"> @ </span>10.00 10.00 1.00\n2 polygon 1<span class=\"bg-red-200\"> @ </span>10.00 20.00 1.05\n3 polygon 1<span class=\"bg-red-200\"> @ </span>20.00 20.00 1.10</pre>\n        </div>\n      </div>\n\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Modus: \"End\" (Flexible Vermessung)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\n          Der Geometrietyp wird bei der letzten Messung entschieden. Das Tag erscheint nur beim letzten Stützpunkt.\n        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Beispiel:</p>\n          <pre class=\"text-xs text-gray-700\">1 polygon 1 10.00 10.00 1.00\n2 polygon 1 10.00 20.00 1.05\n4 polygon 1<span class=\"bg-red-200\"> @ </span>20.00 10.00 1.00</pre>\n        </div>\n      </div>\n\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Modus: \"None\" (Nur Punkte)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\n          Keine Geometrie-Markierungen. Alle Messungen sind einfache Punkte (z.B. Höhenmodelle).\n        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Beispiel:</p>\n          <pre class=\"text-xs text-gray-700\">1 10.00 10.00 1.00\n2 10.00 20.00 1.05\n3 20.00 20.00 1.10</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Understanding the Forms -->\n  <div class=\"bg-white rounded-lg shadow-sm p-5 mb-4\">\n    <h4 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n      <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0\">2</span>\n      <span>Die zwei Formulare verstehen</span>\n    </h4>\n    <p class=\"text-gray-600 text-sm mb-4\">\n      Das Erstellen eines Parsers erfordert das Ausfüllen von zwei Arten von Formularen: ein Parser-Abschnitt und mehrere Feld-Abschnitte.\n    </p>\n\n    <div class=\"mb-4\">\n      <h6 class=\"font-semibold text-gray-900 mb-2\">Parser-Abschnitt Formular</h6>\n      <div class=\"border-l-4 border-blue-500 pl-4\">\n      <p class=\"text-gray-600 text-sm mb-2\">\n        <img src=\"img/parser.jpeg\" alt=\"Parser-Abschnitt Formular\" class=\"border mb-2 h-80\"><br>\n        <strong>Zweck:</strong> Definiert die Gesamtstruktur und Regeln zum Lesen Ihrer Datendatei. <br>\n        Dies teilt Survey2GIS mit, welche Felder Koordinaten enthalten, welche Zeichen Geometrietypen markieren \n        und welcher Parser-Modus verwendet werden soll.\n      </p>\n      <p class=\"text-gray-600 text-sm\">\n        <strong>Sie füllen dies einmal aus</strong> - es enthält globale Einstellungen für Ihre gesamte Datendatei.\n      </p>\n      <div class=\"space-y-4 mt-4\">\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Name (Erforderlich)</h6>\n          <p class=\"text-gray-600 text-sm\">Geben Sie Ihrem Parser einen beschreibenden Namen zur Identifikation.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Tagging-Modus (Erforderlich)</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">Wählen Sie den Parser-Modus, der zu Ihrer Datenstruktur passt (siehe oben).</p>\n          <p class=\"text-sm text-gray-700\">Optionen: <code class=\"bg-gray-100 px-1\">min</code>, <code class=\"bg-gray-100 px-1\">max</code>, <code class=\"bg-gray-100 px-1\">end</code>, <code class=\"bg-gray-100 px-1\">none</code></p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Geometrie-Tags</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">Definieren Sie spezielle Markierungen, die verschiedene Geometrietypen in Ihren Daten identifizieren.</p>\n          <ul class=\"space-y-1 text-sm text-gray-700\">\n            <li><strong>geom tag point:</strong> z.B. \"*\" (optional für einige Modi)</li>\n            <li><strong>geom tag line:</strong> z.B. \"-\" (erforderlich außer \"None\")</li>\n            <li><strong>geom tag poly:</strong> z.B. \"@\" (erforderlich außer \"None\")</li>\n          </ul>\n          <p class=\"text-xs text-gray-500 mt-1\">Tags müssen eindeutig sein und dürfen sich nicht mit Feldtrennzeichen überschneiden.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Tag-Feld</h6>\n          <p class=\"text-gray-600 text-sm\">Das Feld, das die Geometrie-Markierungen enthält. Muss für alle Modi außer \"None\" definiert werden.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Schlüssel-Feld</h6>\n          <p class=\"text-gray-600 text-sm\">Feld mit Werten, die Messungen verknüpfen, die zur selben Geometrie gehören. Erforderlich für die Modi \"End\" und \"Max\".</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Kommentarzeichen (Optional)</h6>\n          <p class=\"text-gray-600 text-sm\">Zeichen, die Kommentare in Ihren Daten markieren (z.B. # oder //). Text nach diesen wird ignoriert.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Keine-Daten-Wert (Optional)</h6>\n          <p class=\"text-gray-600 text-sm\">Ganzzahlwert, der null/fehlende Daten repräsentiert (z.B. -99999). Wird verwendet, wenn Felder leer sind.</p>\n        </div>\n      </div>\n      </div>\n    </div>\n\n    <div class=\"\">\n      <h6 class=\"font-semibold text-gray-900 mb-2\">Feld-Abschnitt Formulare</h6>\n            <div class=\"border-l-4 border-green-500 pl-4\">\n\n      <p class=\"text-gray-600 text-sm mb-2\">\n        <img src=\"img/field.jpeg\" alt=\"Feld-Abschnitt Formular\" class=\"border mb-2 h-80\"><br>\n        <strong>Zweck:</strong> Beschreibt jede Datenspalte in Ihrer Datei - ihren Namen, Datentyp (integer, double, text) \n        und wie sie vom nächsten Feld getrennt ist.\n      </p>\n      <p class=\"text-gray-600 text-sm mb-3\">\n        <strong>Sie benötigen einen Feld-Abschnitt für jede Spalte</strong> in Ihren Daten, definiert in der exakten Reihenfolge, in der sie erscheinen (von links nach rechts).\n      </p>\n      <div class=\"bg-yellow-50 border-l-4 border-yellow-500 p-3 rounded text-sm\">\n        <p class=\"text-gray-800 mb-0\">\n          <strong>Beispiel:</strong> Wenn Ihre Daten so aussehen: <code class=\"bg-white px-1 py-0.5\">1 boundary @ 10.00 20.00 1.50</code><br>\n          Benötigen Sie 6 Feld-Abschnitte: ID (integer), label (text), tag (text), X (double), Y (double), Z (double)\n        </p>\n      </div>\n      <p class=\"text-gray-600 text-sm mb-4 mt-4\">\n        Fügen Sie einen Feld-Abschnitt für jede Spalte in Ihren Tachymeter-Daten hinzu. Felder müssen in derselben Reihenfolge sein, wie sie in Ihren Daten erscheinen.\n      </p>\n\n      <div class=\"space-y-4\">\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Feldname (Erforderlich)</h6>\n          <p class=\"text-gray-600 text-sm\">Bezeichner für Ihr Feld (max. 10 Zeichen). Gültig: nur Buchstaben, Zahlen, Unterstrich.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Feldtyp (Erforderlich)</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">Definiert den Datentyp des Feldes:</p>\n          <ul class=\"space-y-1 text-sm text-gray-700\">\n            <li><strong>integer:</strong> Ganze Zahlen (-1, 0, 100)</li>\n            <li><strong>double:</strong> Dezimalzahlen (-10.05, 0.0) - erforderlich für Koordinaten</li>\n            <li><strong>text:</strong> Generischer Textinhalt</li>\n          </ul>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Trennzeichen (Erforderlich außer für letztes Feld)</h6>\n          <p class=\"text-gray-600 text-sm\">Zeichen, die dieses Feld vom nächsten trennen. Kann mehrere Zeichen oder spezielle Werte verwenden: \"tab\" und \"space\".</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Koordinatenfelder (Erforderlich)</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">Nach der Definition Ihrer Felder geben Sie an, welche Koordinaten enthalten:</p>\n          <ul class=\"space-y-1 text-sm text-gray-700\">\n            <li><strong>coor x:</strong> Feldname für X-Koordinaten (erforderlich, Typ: double)</li>\n            <li><strong>coor y:</strong> Feldname für Y-Koordinaten (erforderlich, Typ: double)</li>\n            <li><strong>coor z:</strong> Feldname für Z-Koordinaten (optional, Typ: double)</li>\n          </ul>\n        </div>\n      </div>\n\n      <h4 class=\"text-lg font-semibold text-gray-900 mb-3 mt-6 flex items-center gap-2\">\n        <span>Optionale Feld-Einstellungen</span>\n      </h4>\n      \n      <div class=\"space-y-3\">\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Leer erlaubt</h6>\n          <p class=\"text-gray-600 text-sm\">Erlaubt, dass Felder leer sind. Kann nicht mit Schlüssel- oder Tag-Feldern verwendet werden.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Feld überspringen</h6>\n          <p class=\"text-gray-600 text-sm\">Verarbeiten Sie das Feld, speichern Sie es aber nicht in der Ausgabe (nützlich für unerwünschte Datenspalten).</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Groß-/Kleinschreibung ändern</h6>\n          <p class=\"text-gray-600 text-sm\">Text in Groß-/Kleinbuchstaben umwandeln (nur Textfelder).</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Textersetzung (@)</h6>\n          <p class=\"text-gray-600 text-sm\">Codes durch vollständigen Text ersetzen (z.B. @P1 = Punkt vom Typ 1).</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Anführungszeichen</h6>\n          <p class=\"text-gray-600 text-sm\">Anführungszeichen aus Textfeldinhalt entfernen (z.B. ' oder \").</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Trennzeichen zusammenführen</h6>\n          <p class=\"text-gray-600 text-sm\">Aufeinanderfolgende Trennzeichen als eines behandeln (nützlich für variable Leerzeichen).</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  </div>\n\n  <!-- Important Notes -->\n  <div class=\"bg-white rounded-lg shadow-sm p-5\">\n    <h4 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n      <span class=\"bg-yellow-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0\">3</span>\n      <span>Wichtige Hinweise</span>\n    </h4>\n    <ul class=\"space-y-1 text-sm text-gray-700 mb-0 list-disc list-inside pl-3\">\n      <li>Geometrie-Tags müssen eindeutig sein und dürfen sich nicht mit Feldtrennzeichen überschneiden</li>\n      <li>Koordinatenfelder müssen vom Typ \"double\" sein</li>\n      <li>Die Feldreihenfolge muss exakt mit Ihrer Datendatei übereinstimmen</li>\n      <li>Polygone werden automatisch geschlossen (keine doppelten Stützpunkte erforderlich)</li>\n      <li>Schlüssel-Feldwerte sind groß-/kleinschreibungssensitiv</li>\n      <li>Stützpunkte einer Geometrie müssen in derselben Datei und aufeinanderfolgend sein (nur durch Kommentare unterbrochen)</li>\n    </ul>\n  </div>\n\n</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  section: {  \n    type: String,\n    default: 'introduction'\n  }\n});\n\nconst activeTab = ref('introduction');\n\n// Map section to tab\nwatch(() => props.section, (newSection) => {\n  const mapping = {\n    'field': 'parser',\n    'parser': 'parser',\n    'interface': 'interface',\n    'help': 'introduction'\n  };\n  activeTab.value = mapping[newSection] || 'introduction';\n}, { immediate: true });\n\n// Expose method to allow parent to change tab programmatically\nconst openTab = (tabName) => {\n  if (['introduction', 'interface', 'parser'].includes(tabName)) {\n    activeTab.value = tabName;\n  }\n};\n\ndefineExpose({\n  openTab\n});\n</script>\n\n<style scoped>\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n</style>","import script from \"./HelpSidebarDe.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HelpSidebarDe.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HelpSidebarDe.vue?vue&type=style&index=0&id=8964245c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8964245c\"]])\n\nexport default __exports__","<template>\n  <div class=\"h-screen flex flex-col \">\n    <!-- Tab Navigation -->\n    <div class=\"bg-white border-b border-gray-200\">\n      <div class=\"flex\">\n        <button \n          class=\"flex-1 px-4 py-3 text-sm font-medium transition-colors border-b-2\"\n          :class=\"activeTab === 'introduction' ? 'text-blue-600 border-blue-600 bg-blue-50' : 'text-gray-600 border-transparent hover:text-gray-900 hover:bg-gray-50'\"\n          @click=\"activeTab = 'introduction'\"\n        >\n          Introduction\n        </button>\n        <button \n          class=\"flex-1 px-4 py-3 text-sm font-medium transition-colors border-b-2\"\n          :class=\"activeTab === 'interface' ? 'text-blue-600 border-blue-600 bg-blue-50' : 'text-gray-600 border-transparent hover:text-gray-900 hover:bg-gray-50'\"\n          @click=\"activeTab = 'interface'\"\n        >\n          Website UI\n        </button>\n        <button \n          class=\"flex-1 px-4 py-3 text-sm font-medium transition-colors border-b-2\"\n          :class=\"activeTab === 'parser' ? 'text-blue-600 border-blue-600 bg-blue-50' : 'text-gray-600 border-transparent hover:text-gray-900 hover:bg-gray-50'\"\n          @click=\"activeTab = 'parser'\"\n        >\n          Define Parser\n        </button>\n      </div>\n    </div>\n\n    <!-- Tab Content -->\n    <div class=\"flex-1  p-6\">\n      \n      <!-- Introduction Content -->\n      <div v-show=\"activeTab === 'introduction'\">\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-3\">Survey2GIS Parser Builder</h2>\n        <p class=\"text-gray-600 mb-6\">\n          This tool helps you create parser files that enable Survey2GIS to convert your tachymeter data into Shapefiles, GeoJSON, and other GIS formats.\n        </p>\n\n        <div class=\"border-blue-500 rounded mb-6\">\n          <h5 class=\"font-semibold text-blue-900 mb-3\">What is a Parser File?</h5>\n          <p class=\"text-sm mb-4\">\n            A parser file is a configuration that tells Survey2GIS how to read and interpret your tachymeter data. <br>\n            It defines which columns contain coordinates, what characters mark different geometry types, and how to process the measurements.\n          </p>\n          \n          <h6 class=\"font-semibold text-blue-900 mb-2 text-sm\">Compatible with:</h6>\n          <ul class=\"space-y-2 text-sm\">\n            <li>\n              <strong>Command Line Tool:</strong> \n              <a href=\"https://github.com/survey2gis/survey-tools\" class=\"text-blue-700 hover:underline underline ml-1\" target=\"_blank\" rel=\"noopener noreferrer\">\n                github.com/survey2gis/survey-tools\n              </a>\n            </li>\n            <li>\n              <strong>QGIS Plugin:</strong> \n              <a href=\"https://plugins.qgis.org/plugins/s2g_data_processor/\" class=\"text-blue-700 hover:underline underline ml-1\" target=\"_blank\" rel=\"noopener noreferrer\">\n                S2G Data Processor\n              </a>\n            </li>\n          </ul>\n          \n          <div class=\"mt-4 pt-4 border-t border-blue-200\">\n            <p class=\"text-sm text-blue-800 mb-1\">\n              <strong>Full Documentation:</strong>\n            </p>\n            <a href=\"https://s2g-docs.survey-tools.org/parser-schema.html\" class=\"text-blue-700 hover:text-blue-600 font-medium underline text-sm\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Parser Schema Documentation\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <!-- Interface Content -->\n      <div v-show=\"activeTab === 'interface'\">\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Understanding the Interface</h2>\n\n        <div class=\"space-y-4\">\n          <div class=\"bg-white rounded-lg shadow-sm p-5\">\n            <h5 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n              <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold\">1</span>\n              The Navigation Bar\n            </h5>\n            <p class=\"text-gray-600 mb-3\">\n                <img src=\"img/nav.jpeg\" alt=\"Survey2GIS Navigation\" class=\"border mb-3\">\n\n                From left to right:\n                <ol class=\"list-decimal list-inside space-y-1 mt-2\">\n                  <li>Logo and Home Button - Click to return to the homepage</li>\n                  <li>Select for:\n                    <ul class=\"list-disc list-inside pl-6\">\n                      <li>Uploading a parser file locally saved on your hard drive</li>\n                      <li>Load a sample parser file for learning purposes</li>\n                      <li>Search the community parser library for shared configurations</li>\n                    </ul>\n                  </li>\n                  <li>Switch between German and English language</li>\n                  <li>Imprint of this website</li>\n                  <li>Open this help sidebar</li>\n                </ol>\n            </p>\n          </div>\n\n          <div class=\"bg-white rounded-lg shadow-sm p-5\">\n            <h5 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n              <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold\">2</span>\n              Start a New Parser\n            </h5>\n            <p class=\"text-gray-600 mb-3\">\n                On the left side, click the following button to start a new parser configuration.\n            </p>\n            <img src=\"img/start_new.jpeg\" alt=\"Start new parser\" class=\"border mb-3\">\n            <p class=\"text-gray-600\">\n                You will see your defined parser in live preview on the right side.\n            </p>\n            <img src=\"img/parser_definition.jpeg\" alt=\"Parser GUI\" class=\"border mt-2 mb-2\">\n            <p class=\"text-gray-600 text-sm\">\n                For more information visit the next tab \"Define Parser\".\n            </p>\n          </div>\n\n          <div class=\"bg-white rounded-lg shadow-sm p-5\">\n            <h5 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n              <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold\">3</span>\n              Parser Repository\n            </h5>\n            <p class=\"text-gray-600 mb-3\">\n                By choosing the \"Search Community Parsers\" option in the navigation bar you can access the parser repository.\n            </p>\n            <img src=\"img/parser_repository.jpeg\" alt=\"Parser Repository\" class=\"border mb-2\">\n            <p class=\"text-gray-600 text-sm\">\n                Here you can search for parsers shared by the community. You can filter by name.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Parser Content -->\n<div v-show=\"activeTab === 'parser'\">\n  <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">How to Define a Parser</h2>\n  <p class=\"text-gray-600 mb-6\">Understanding parser modes and configuring your parser file.</p>\n\n  <!-- Understanding Parser Modes -->\n  <div class=\"bg-white rounded-lg shadow-sm p-5 mb-4\">\n    <h4 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n      <span class=\"bg-purple-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0\">1</span>\n      <span>Understanding Parser Modes</span>\n    </h4>\n    <p class=\"text-gray-600 text-sm mb-4\">\n      Before creating your parser, understand how your tachymeter data is structured. \n      Choose the mode that matches your data format.\n    </p>\n\n    <div class=\"space-y-4\">\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Mode: \"Min\" (Minimal Coding)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\n          Best for reducing field work. Only the first vertex of lines/polygons needs full attributes.\n        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Example:</p>\n          <pre class=\"text-xs text-gray-700\">1 polygon 1<span class=\"bg-red-200\"> @ </span>10.00 10.00 1.00\n10.00 20.00 1.05\n20.00 20.00 1.10</pre>\n        </div>\n      </div>\n\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Mode: \"Max\" (Maximum Control)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\n          Every measurement must have a geometry tag. Each vertex has complete attributes. Requires separate key field.\n        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Example:</p>\n          <pre class=\"text-xs text-gray-700\">1 polygon 1<span class=\"bg-red-200\"> @ </span>10.00 10.00 1.00\n2 polygon 1<span class=\"bg-red-200\"> @ </span>10.00 20.00 1.05\n3 polygon 1<span class=\"bg-red-200\"> @ </span>20.00 20.00 1.10</pre>\n        </div>\n      </div>\n\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Mode: \"End\" (Flexible Surveying)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\n          Geometry type is decided at the final measurement. Tag appears only on last vertex.\n        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Example:</p>\n          <pre class=\"text-xs text-gray-700\">1 polygon 1 10.00 10.00 1.00\n2 polygon 1 10.00 20.00 1.05\n4 polygon 1<span class=\"bg-red-200\"> @ </span>20.00 10.00 1.00</pre>\n        </div>\n      </div>\n\n      <div class=\"border-l-4 border-gray-300 pl-4\">\n        <h6 class=\"font-semibold text-gray-900 mb-1\">Mode: \"None\" (Points Only)</h6>\n        <p class=\"text-gray-600 text-sm mb-2\">\n          No geometry markers. All measurements are simple points (e.g., elevation models).\n        </p>\n        <div class=\"bg-gray-50 p-3 rounded\">\n          <p class=\"text-xs text-gray-600 mb-1\">Example:</p>\n          <pre class=\"text-xs text-gray-700\">1 10.00 10.00 1.00\n2 10.00 20.00 1.05\n3 20.00 20.00 1.10</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Understanding the Forms -->\n  <div class=\"bg-white rounded-lg shadow-sm p-5 mb-4\">\n    <h4 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n      <span class=\"bg-blue-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0\">2</span>\n      <span>Understanding the Two Forms</span>\n    </h4>\n    <p class=\"text-gray-600 text-sm mb-4\">\n      Creating a parser requires filling out two types of forms: one Parser Section and multiple Field Sections.\n    </p>\n\n    <div class=\"mb-4\">\n      <h6 class=\"font-semibold text-gray-900 mb-2\">Parser Section Form</h6>\n      <div class=\"border-l-4 border-blue-500 pl-4\">\n      <p class=\"text-gray-600 text-sm mb-2\">\n        <img src=\"img/parser.jpeg\" alt=\"Parser Section Form\" class=\"border mb-2 h-80\"><br>\n        <strong>Purpose:</strong> Defines the overall structure and rules for reading your data file. <br>\n        This tells Survey2GIS which fields contain coordinates, what characters mark geometry types, \n        and which parser mode to use.\n      </p>\n      <p class=\"text-gray-600 text-sm\">\n        <strong>You fill this out once</strong> - it contains global settings for your entire data file.\n      </p>\n      <div class=\"space-y-4 mt-4\">\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Name (Required)</h6>\n          <p class=\"text-gray-600 text-sm\">Give your parser a descriptive name for identification.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Tagging Mode (Required)</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">Select the parser mode that matches your data structure (see above).</p>\n          <p class=\"text-sm text-gray-700\">Options: <code class=\"bg-gray-100 px-1\">min</code>, <code class=\"bg-gray-100 px-1\">max</code>, <code class=\"bg-gray-100 px-1\">end</code>, <code class=\"bg-gray-100 px-1\">none</code></p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Geometry Tags</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">Define special markers that identify different geometry types in your data.</p>\n          <ul class=\"space-y-1 text-sm text-gray-700\">\n            <li><strong>geom tag point:</strong> e.g., \"*\" (optional for some modes)</li>\n            <li><strong>geom tag line:</strong> e.g., \"-\" (required except \"None\")</li>\n            <li><strong>geom tag poly:</strong> e.g., \"@\" (required except \"None\")</li>\n          </ul>\n          <p class=\"text-xs text-gray-500 mt-1\">Tags must be unique and not overlap with field separators.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Tag Field</h6>\n          <p class=\"text-gray-600 text-sm\">The field that contains the geometry markers. Must be defined for all modes except \"None\".</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Key Field</h6>\n          <p class=\"text-gray-600 text-sm\">Field containing values that link measurements belonging to the same geometry. Required for \"End\" and \"Max\" modes.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Comment Mark (Optional)</h6>\n          <p class=\"text-gray-600 text-sm\">Characters that mark comments in your data (e.g., # or //). Text after these will be ignored.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">No Data Value (Optional)</h6>\n          <p class=\"text-gray-600 text-sm\">Integer value representing null/missing data (e.g., -99999). Used when fields are empty.</p>\n        </div>\n      </div>\n      </div>\n    </div>\n\n    <div class=\"\">\n      <h6 class=\"font-semibold text-gray-900 mb-2\">Field Section Forms</h6>\n            <div class=\"border-l-4 border-green-500 pl-4\">\n\n      <p class=\"text-gray-600 text-sm mb-2\">\n        <img src=\"img/field.jpeg\" alt=\"Field Section Form\" class=\"border mb-2 h-80\"><br>\n        <strong>Purpose:</strong> Describes each data column in your file - its name, data type (integer, double, text), \n        and how it's separated from the next column.\n      </p>\n      <p class=\"text-gray-600 text-sm mb-3\">\n        <strong>You need one Field Section for each column</strong> in your data, defined in the exact order they appear (left to right).\n      </p>\n      <div class=\"bg-yellow-50 border-l-4 border-yellow-500 p-3 rounded text-sm\">\n        <p class=\"text-gray-800 mb-0\">\n          <strong>Example:</strong> If your data looks like: <code class=\"bg-white px-1 py-0.5\">1 boundary @ 10.00 20.00 1.50</code><br>\n          You need 6 Field Sections: ID (integer), label (text), tag (text), X (double), Y (double), Z (double)\n        </p>\n      </div>\n      <p class=\"text-gray-600 text-sm mb-4 mt-4\">\n        Add one field section for each column in your tachymeter data. Fields must be in the same order as they appear in your data.\n      </p>\n\n      <div class=\"space-y-4\">\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Field Name (Required)</h6>\n          <p class=\"text-gray-600 text-sm\">Identifier for your field (max 10 characters). Valid: letters, numbers, underscore only.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Field Type (Required)</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">Defines the data type of the field:</p>\n          <ul class=\"space-y-1 text-sm text-gray-700\">\n            <li><strong>integer:</strong> Whole numbers (-1, 0, 100)</li>\n            <li><strong>double:</strong> Decimal numbers (-10.05, 0.0) - required for coordinates</li>\n            <li><strong>text:</strong> Generic text content</li>\n          </ul>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Separator (Required except last field)</h6>\n          <p class=\"text-gray-600 text-sm\">Characters separating this field from the next. Can use multiple characters or special values: \"tab\" and \"space\".</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Coordinate Fields (Required)</h6>\n          <p class=\"text-gray-600 text-sm mb-2\">After defining your fields, specify which ones contain coordinates:</p>\n          <ul class=\"space-y-1 text-sm text-gray-700\">\n            <li><strong>coor x:</strong> Field name for X coordinates (required, type: double)</li>\n            <li><strong>coor y:</strong> Field name for Y coordinates (required, type: double)</li>\n            <li><strong>coor z:</strong> Field name for Z coordinates (optional, type: double)</li>\n          </ul>\n        </div>\n      </div>\n\n      <h4 class=\"text-lg font-semibold text-gray-900 mb-3 mt-6 flex items-center gap-2\">\n        <span>Optional Field Settings</span>\n      </h4>\n      \n      <div class=\"space-y-3\">\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Empty Allowed</h6>\n          <p class=\"text-gray-600 text-sm\">Allow fields to be empty. Cannot be used with key or tag fields.</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Skip Field</h6>\n          <p class=\"text-gray-600 text-sm\">Process but don't save this field in output (useful for unwanted data columns).</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Change Case</h6>\n          <p class=\"text-gray-600 text-sm\">Convert text to upper/lower case (text fields only).</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Text Replacement (@)</h6>\n          <p class=\"text-gray-600 text-sm\">Replace codes with full text (e.g., @P1 = Point of type 1).</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Quotation</h6>\n          <p class=\"text-gray-600 text-sm\">Remove quotation marks from text field content (e.g., ' or \").</p>\n        </div>\n\n        <div>\n          <h6 class=\"font-semibold text-gray-900 text-sm mb-1\">Merge Separators</h6>\n          <p class=\"text-gray-600 text-sm\">Treat adjacent separators as one (useful for variable whitespace).</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  </div>\n\n  <!-- Important Notes -->\n  <div class=\"bg-white rounded-lg shadow-sm p-5\">\n    <h4 class=\"text-lg font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n      <span class=\"bg-yellow-600 text-white w-7 h-7 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0\">3</span>\n      <span>Important Considerations</span>\n    </h4>\n    <ul class=\"space-y-1 text-sm text-gray-700 mb-0 list-disc list-inside pl-3\">\n      <li>Geometry tags must be unique and not overlap with field separators</li>\n      <li>Coordinate fields must be type \"double\"</li>\n      <li>Field order must exactly match your data file</li>\n      <li>Polygons are automatically closed (no duplicate vertices needed)</li>\n      <li>Key field values are case-sensitive</li>\n      <li>Vertices of one geometry must be in the same file and consecutive (only interrupted by comments)</li>\n    </ul>\n  </div>\n\n</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  section: {  \n    type: String,\n    default: 'introduction'\n  }\n});\n\nconst activeTab = ref('introduction');\n\n// Map section to tab\nwatch(() => props.section, (newSection) => {\n  const mapping = {\n    'field': 'parser',\n    'parser': 'parser',\n    'interface': 'interface',\n    'help': 'introduction'\n  };\n  activeTab.value = mapping[newSection] || 'introduction';\n}, { immediate: true });\n\n// Expose method to allow parent to change tab programmatically\nconst openTab = (tabName) => {\n  if (['introduction', 'interface', 'parser'].includes(tabName)) {\n    activeTab.value = tabName;\n  }\n};\n\ndefineExpose({\n  openTab\n});\n</script>\n\n<style scoped>\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n</style>","import script from \"./HelpSidebarEn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HelpSidebarEn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HelpSidebarEn.vue?vue&type=style&index=0&id=96456e3a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-96456e3a\"]])\n\nexport default __exports__","<template>\n  <component :is=\"localizedComponent\" :section=\"section\" />\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport HelpSidebarDe from './HelpSidebarDe.vue'\nimport HelpSidebarEn from './HelpSidebarEn.vue'\n\ndefineProps({\n  section: {\n    type: String,\n    default: 'introduction'\n  }\n})\n\nconst { locale } = useI18n()\n\nconst localizedComponent = computed(() => {\n  return locale.value === 'de' ? HelpSidebarDe : HelpSidebarEn\n})\n</script>","import script from \"./HelpSidebar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HelpSidebar.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export async function fetchParserData() {\n    try {\n      // Fetch parser.json\n      const jsonResponse = await fetch('https://raw.githubusercontent.com/survey2gis/parser-repository/main/parser.json')\n      if (!jsonResponse.ok) throw new Error('Failed to fetch parser list')\n      const parserList = await jsonResponse.json()\n  \n      // Transform the data structure\n      return Object.entries(parserList).map(([key, value]) => ({\n        id: key,\n        name: key,\n        author: value.author,\n        description: value.description,\n        filename: value.filename\n      }))\n    } catch (error) {\n      console.error('Error fetching parser data:', error)\n      throw error\n    }\n  }\n  \n  export async function fetchParserContent(filename) {\n    try {\n      // Remove ./ from the start of the filename if present\n      const cleanPath = filename.replace(/^\\.\\//, '')\n      const response = await fetch(`https://raw.githubusercontent.com/survey2gis/parser-repository/main/${cleanPath}`)\n      if (!response.ok) throw new Error('Failed to fetch parser content')\n      return await response.text()\n    } catch (error) {\n      console.error('Error fetching parser content:', error)\n      throw error\n    }\n  }","<template>\n  \n  <div class=\"space-y-6\">\n    <!-- Help Section -->\n    <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n      <div class=\"flex items-start\">\n        <i class=\"pi pi-info-circle text-blue-600 mt-1 mr-3\"></i>\n        <div class=\"text-sm text-blue-800\">\n          <p class=\"mb-2\">\n            {{ $t('navigation.repository.helpText') }}\n          </p>\n          <p>\n            {{ $t('navigation.repository.contributeText') }}             <a \n              href=\"https://github.com/survey2gis/parser-repository\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              class=\"underline hover:text-blue-900 font-medium\"\n            ><br>\n              github.com/survey2gis/parser-repository\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n      <!-- Search and Status Bar -->\n      <div class=\"flex justify-between items-center\">\n        <div class=\"relative flex-grow max-w-md\">\n          <input\n            type=\"text\"\n            v-model=\"searchTerm\"\n            placeholder=\"Search parsers...\"\n            class=\"w-full px-4 py-2 pl-10 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n          <i class=\"pi pi-search absolute left-3 top-3 text-gray-400\"></i>\n        </div>\n        \n        <!-- Loading/Error State -->\n        <div v-if=\"loading || error\" class=\"text-sm\">\n          <span v-if=\"loading\" class=\"text-blue-600\">\n            <i class=\"pi pi-spinner animate-spin mr-2\"></i>Loading...\n          </span>\n          <span v-if=\"error\" class=\"text-red-600\">\n            <i class=\"pi pi-exclamation-circle mr-2\"></i>{{ error }}\n          </span>\n        </div>\n      </div>\n  \n      <!-- Parser List -->\n      <div v-if=\"!loading && !error\" class=\"space-y-4\">\n        <div v-for=\"parser in filteredParsers\" \n             :key=\"parser.id\"\n             @click=\"selectParser(parser)\"\n             class=\"bg-white p-4 rounded-lg border hover:border-blue-500 cursor-pointer transition-all hover:shadow-md\"\n        >\n          <div class=\"flex justify-between items-start\">\n            <div class=\"space-y-1\">\n              <h3 class=\"font-medium text-gray-900\">{{ parser.name }}</h3>\n              <p class=\"text-sm text-gray-600\">{{ parser.description }}</p>\n              <p class=\"text-xs text-gray-500\">Author: {{ parser.author }}</p>\n            </div>\n            <button \n              class=\"text-blue-600 hover:text-blue-800 px-3 py-1 rounded-full hover:bg-blue-50 transition-colors\"\n            >\n              <i class=\"pi pi-download mr-1\"></i>\n              Load\n            </button>\n          </div>\n        </div>\n  \n        <!-- No Results -->\n        <div v-if=\"filteredParsers.length === 0\" class=\"text-center py-8 text-gray-500\">\n          No parsers found matching your search.\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n  import { ref, computed, onMounted } from 'vue'\n  import { fetchParserData, fetchParserContent, defineEmits  } from '../utils/github'\n\n  const parsers = ref([])\n  const searchTerm = ref('')\n  const loading = ref(true)\n  const error = ref(null)\n\n\n  // Filter parsers based on search term\n  const filteredParsers = computed(() => {\n    if (!searchTerm.value) return parsers.value\n  \n    const term = searchTerm.value.toLowerCase()\n    return parsers.value.filter(parser => \n      parser.name.toLowerCase().includes(term) ||\n      parser.description.toLowerCase().includes(term) ||\n      parser.author.toLowerCase().includes(term)\n    )\n  })\n  \n  // Load parser list on component mount\n  onMounted(async () => {\n    try {\n      parsers.value = await fetchParserData()\n      loading.value = false\n    } catch (err) {\n      error.value = 'Failed to load parser list'\n      loading.value = false\n    }\n  })\n  \n  const emit = defineEmits(['select-parser'])\n  \n  // Handle parser selection\n  const selectParser = async (parser) => {\n    try {\n      loading.value = true\n      error.value = null\n      \n      // Fetch the parser content\n      const content = await fetchParserContent(parser.filename)\n      \n      // Emit the content to parent\n      emit('select-parser', {\n        name: parser.name,\n        content: content\n      })\n    } catch (err) {\n      error.value = `Failed to load parser: ${err.message}`\n    } finally {\n      loading.value = false\n    }\n  }\n  </script>","import script from \"./ParserRepository.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ParserRepository.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { nextTick, ref } from 'vue'\n\nimport FormatDetector from '../components/FormatDetector.vue'\nimport HelpSidebar from '../components/help/HelpSidebar.vue'\nimport ParserRepository from '../components/ParserRepository.vue'\n\nexport function useUI() {\n  const showSidebar = ref(false)\n  const sidebarConfig = ref({\n    title: '',\n    component: null,\n    props: {}\n  })\n  \n  const showStartLabel = ref(true)\n  const isDropdownOpen = ref(false)\n  const showToast = ref(false)\n  const openSection = ref('')\n\n  const scrollToSection = (section, iniContent) => {\n    nextTick(() => {\n      // First scroll the code section\n      const codeWrapper = document.querySelector('.code__wrapper')\n      const codeElement = document.querySelector('.code__field')\n      \n      if (!codeWrapper || !codeElement) {\n        console.error('Required elements not found')\n        return\n      }\n  \n      // Split content into lines and find target section\n      const lines = iniContent.split('\\n')\n      let targetLineIndex = -1\n  \n      // Find the section index\n      if (section === 'parser') {\n        targetLineIndex = lines.findIndex(line => line.trim().toLowerCase() === '[parser]')\n      } else {\n        let currentField = -1\n        targetLineIndex = lines.findIndex(line => {\n          if (line.trim().toLowerCase() === '[field]') {\n            currentField++\n            return currentField === section\n          }\n          return false\n        })\n      }\n  \n      if (targetLineIndex === -1) {\n        console.error('Target section not found')\n        return\n      }\n  \n      // Get the computed styles and calculate code scroll position\n      const styles = window.getComputedStyle(codeElement)\n      const lineHeight = parseFloat(styles.lineHeight) || 21\n      const wrapperPadding = parseFloat(window.getComputedStyle(codeWrapper).paddingTop) || 0\n      const targetPosition = (targetLineIndex * lineHeight) - wrapperPadding\n  \n      // Scroll code wrapper\n      codeWrapper.scrollTo({\n        top: Math.max(0, targetPosition),\n        behavior: 'smooth'\n      })\n  \n      // After 1 second, scroll the left panel section into view\n      setTimeout(() => {\n        // Find the left panel section\n        const leftPanel = document.querySelector('.left-panel')\n        if (!leftPanel) return\n  \n        let targetSection\n        if (section === 'parser') {\n          targetSection = leftPanel.querySelector('.section')  // First section is parser\n        } else {\n          const sections = Array.from(leftPanel.querySelectorAll('.section'))\n          targetSection = sections[section + 1]  // +1 because parser is first\n        }\n  \n        if (targetSection) {\n          // Calculate target position relative to left panel\n          const leftPanelTop = leftPanel.getBoundingClientRect().top\n          const sectionTop = targetSection.getBoundingClientRect().top\n          const scrollTop = leftPanel.scrollTop + (sectionTop - leftPanelTop)\n  \n          // Scroll left panel\n          leftPanel.scrollTo({\n            top: Math.max(0, scrollTop),\n            behavior: 'smooth'\n          })\n        }\n      }, 200)  // 1 second delay\n  \n      // Debug info\n      console.log({\n        targetLineIndex,\n        lineHeight,\n        wrapperPadding,\n        targetPosition,\n        currentScroll: codeWrapper.scrollTop,\n        wrapperHeight: codeWrapper.clientHeight,\n        totalHeight: codeElement.clientHeight\n      })\n    })\n  }\n  \n  const showFormatDetector = () => {\n    sidebarConfig.value = {\n      title: 'Format Detector',\n      component: FormatDetector,\n      props: {}\n    }\n    showSidebar.value = true\n    closeDropdown()\n  }\n\n  const showHelp = (section) => {\n    const titles = {\n      parser: 'Parser Section Help',\n      field: 'Field Section Help',\n      imprint: 'Imprint',\n      help: 'Help'\n    }\n    \n    sidebarConfig.value = {\n      title: titles[section] || '',\n      component: HelpSidebar,\n      props: { section }\n    }\n    showSidebar.value = true\n  }\n\n  const showComponent = (component, title, props = {}) => {\n    sidebarConfig.value = {\n      title,\n      component,\n      props\n    }\n    showSidebar.value = true\n  }\n\n  const closeSidebar = () => {\n    showSidebar.value = false\n  }\n\n  const closeToast = () => {\n    showToast.value = false\n  }\n\n  const closeDropdown = () => {\n    isDropdownOpen.value = false\n  }\n\n  const toggleSection = (section, iniContent) => {\n    const wasOpen = openSection.value === section\n    openSection.value = wasOpen ? null : section\n    \n    // Add scroll to code section if not closing\n    if (!wasOpen && iniContent) {\n      scrollToSection(section, iniContent)\n    }\n  }\n\n  const showRepository = () => {\n    sidebarConfig.value = {\n      title: 'Parser Repository',\n      component: ParserRepository,\n      props: {}\n    }\n    showSidebar.value = true\n  }\n\n  return {\n    showSidebar,\n    sidebarConfig,\n    showStartLabel,\n    isDropdownOpen,\n    showToast,\n    openSection,\n    showHelp,\n    showComponent,\n    closeSidebar,\n    closeToast,\n    closeDropdown,\n    toggleSection,\n    showRepository,\n    showFormatDetector\n  }\n}","export const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n  \n      reader.onload = (event) => {\n        try {\n          resolve(event.target.result)\n        } catch (error) {\n          reject(error)\n        }\n      }\n  \n      reader.onerror = (event) => {\n        reject(new Error(event.target.error))\n      }\n  \n      reader.readAsText(file)\n    })\n  }","import { readFileContent } from '../utils/file'\nimport { ref } from 'vue'\nimport { validateAliases } from '../utils/validation'\n\nexport function useFileHandler({\n  parserSection,\n  fieldSections,\n  hasStarted,\n  openSection,\n  resetParser,\n  validationErrors,\n  addFieldSection,\n  validateField\n}) {\n  const fileError = ref('')\n  const uploadisDisabled = ref(false)\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0]\n    if (!file) {\n      fileError.value = 'No file selected'\n      return\n    }\n\n    if (!file.name.toLowerCase().endsWith('.ini') && !file.name.toLowerCase().endsWith('.txt')) {\n      fileError.value = 'Invalid file type. Please upload an .ini or .txt file'\n      return\n    }\n\n    try {\n      const content = await readFileContent(file)\n      parseIniContent(content)\n      fileError.value = ''\n    } catch (error) {\n      fileError.value = `Error reading file: ${error.message}`\n    }\n  }\n\n  const loadSampleData = () => {\n    const samplePath = './parser/parser_desc_min.txt'\n    fetch(samplePath)\n      .then(response => response.text())\n      .then(content => {\n        parseIniContent(content)\n      })\n      .catch(error => {\n        fileError.value = `Error loading sample data: ${error.message}`\n      })\n  }\n\n  const parseIniContent = (content) => {\n    try {\n      resetParser()\n      fileError.value = ''\n      validationErrors.value = {}\n\n      hasStarted.value = true\n      openSection.value = 'parser'\n\n      let currentSection = null\n      let currentAliases = []\n      let currentFieldIndex = -1\n      const lines = content.split('\\n')\n\n      // Clear existing fields\n      fieldSections.value = []\n\n      for (let line of lines) {\n        line = line.trim()\n\n        if (!line || line.startsWith('#')) continue\n\n        if (line.startsWith('[') && line.endsWith(']')) {\n          if (currentSection === 'field' && currentAliases.length > 0 && \n              fieldSections.value.length > 0) {\n            const currentField = fieldSections.value[fieldSections.value.length - 1]\n            const aliasesString = currentAliases.join('\\n')\n            \n            const validationError = validateAliases(aliasesString)\n            if (validationError) {\n              validationErrors.value[`field-${currentFieldIndex}-aliases`] = validationError\n            }\n            currentField.aliases = aliasesString\n          }\n          \n          currentSection = line.slice(1, -1).toLowerCase()\n          currentAliases = []\n          \n          if (currentSection === 'field') {\n            currentFieldIndex++\n            addFieldSection()\n          }\n          continue\n        }\n\n        if (currentSection) {\n          if (line.startsWith('@')) {\n            currentAliases.push(line)\n          } else if (line.includes('=')) {\n            const [key, ...valueParts] = line.split('=')\n            const trimmedKey = key.trim()\n            const value = valueParts.join('=').trim()\n\n            if (currentSection === 'parser') {\n              if (trimmedKey in parserSection.value) {\n                parserSection.value[trimmedKey] = value\n              }\n            } else if (currentSection === 'field' && fieldSections.value.length > 0) {\n              const currentField = fieldSections.value[fieldSections.value.length - 1]\n              if (trimmedKey in currentField) {\n                currentField[trimmedKey] = value\n              }\n            }\n          }\n        }\n      }\n\n      if (currentSection === 'field' && currentAliases.length > 0 && \n          fieldSections.value.length > 0) {\n        const currentField = fieldSections.value[fieldSections.value.length - 1]\n        const aliasesString = currentAliases.join('\\n')\n        \n        const validationError = validateAliases(aliasesString)\n        if (validationError) {\n          validationErrors.value[`field-${currentFieldIndex}-aliases`] = validationError\n        }\n        currentField.aliases = aliasesString\n      }\n\n      fieldSections.value.forEach((field, index) => {\n        validateField(index, field.name)\n      })\n    } catch (error) {\n      fileError.value = `Error parsing INI content: ${error.message}`\n      console.error('Error parsing INI content:', error)\n    }\n  }\n\n  const triggerFileUpload = () => {\n    document.querySelector('#file-upload').click()\n  }\n\n  return {\n    fileError,\n    uploadisDisabled,\n    handleFileUpload,\n    loadSampleData,\n    triggerFileUpload,\n    parseIniContent\n  }\n}","import { nextTick, ref, watch } from 'vue'\n\nimport { highlightElement } from '../utils/prism-setup'\n\nexport function useIniGenerator(parserSection, fieldSections) {\n  const generatedIni = ref('')\n\n  const generateIni = () => {\n    let ini = '[Parser]\\n'\n    \n    const parserEntries = Object.entries(parserSection.value)\n      .filter(([, value]) => value !== '')\n      .map(([key, value]) => `${key} = ${value}`)\n      .join('\\n')\n    ini += parserEntries\n\n    fieldSections.value.forEach((field) => {\n      ini += '\\n\\n[Field]\\n'\n      \n      const regularFields = Object.entries(field)\n        .filter(([key, value]) => key !== 'aliases' && value !== '')\n        .map(([key, value]) => `${key} = ${value}`)\n        .join('\\n')\n      ini += regularFields\n\n      if (field.aliases) {\n        const validAliases = field.aliases\n          .split('\\n')\n          .filter(line => line.trim() && !line.includes('error'))\n          .map(line => {\n            line = line.trim()\n            if (line.startsWith('@')) {\n              const [keyPart, ...valueParts] = line.split('=')\n              const key = keyPart.trim()\n              const value = valueParts.join('=').trim()\n              return `${key} = ${value}`\n            }\n            return line\n          })\n          .join('\\n')\n        if (validAliases) {\n          ini += regularFields ? '\\n' : ''\n          ini += validAliases\n        }\n      }\n    })\n\n    generatedIni.value = ini + '\\n'\n\n    // Update syntax highlighting after content changes\n    nextTick(() => {\n      const codeElement = document.querySelector('.code__field')\n      if (codeElement) {\n        highlightElement(codeElement)\n      }\n    })\n  }\n\n  // Watch for changes and regenerate INI\n  watch([parserSection, fieldSections], generateIni, { deep: true })\n\n  const downloadIni = () => {\n    const blob = new Blob([generatedIni.value], { type: 'text/plain' })\n    const url = window.URL.createObjectURL(blob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = 'survey2gis_parser.ini'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n  }\n\n  return {\n    generatedIni,\n    generateIni,\n    downloadIni\n  }\n}","import script from \"./DynamicSidebar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DynamicSidebar.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"section\">\n      <!-- Start New Parser Button -->\n      <div v-if=\"!isStarted\" class=\"flex justify-center py-8\">\n        <button\n          @click=\"startNewParser\"\n          class=\"flex items-center gap-2 px-6 py-3 bg-blue-900 text-white rounded-full hover:bg-blue-700 transition-colors shadow-lg hover:shadow-xl\"\n        >\n          <i class=\"pi pi-file-edit text-xl\"></i>\n          {{ $t('parser.startNew') }}\n        </button>\n      </div>\n  \n      <!-- Parser Section Content -->\n      <div \n        v-show=\"isStarted\"\n        class=\"shadow mb-3\" \n        :class=\"isParserSectionInvalid ? 'bg-red-100' : 'bg-white'\"\n      >\n        <div class=\"p-4\">\n          <div \n            class=\"flex justify-between items-center cursor-pointer relative\"\n            @click=\"$emit('toggle-section', 'parser')\"\n          >\n            <div class=\"flex items-center\">\n              <h3 class=\"text-lg font-semibold\">{{ $t('parser.section') }}</h3>\n              <i \n                v-if=\"!isParserSectionInvalid\"\n                class=\"pi pi-check-circle text-lg ml-2 text-green-500\"\n              ></i>\n              <i \n                v-if=\"isParserSectionInvalid\"\n                class=\"pi pi-times text-lg ml-2 text-red-500\"\n              ></i>\n\n            </div>\n            <div class=\"flex items-center\">\n              <button \n                @click.stop=\"$emit('help', 'parser')\" \n                class=\"text-blue-500 hover:text-blue-600\"\n              >\n                <i class=\"pi pi-question-circle\"></i>\n              </button>\n              <i \n                class=\"pi pi-chevron-down text-lg ml-2 transform transition-transform\"\n                :class=\"{'rotate-180': isOpen}\"\n              ></i>\n            </div>\n          </div>\n    \n          <div v-show=\"isOpen\" class=\"mt-4\">\n            <p class=\"text-gray-400 mb-4\">\n              {{ $t('parser.required') }}\n            </p>\n            <div class=\"grid grid-cols-2 gap-4\">\n              <template v-for=\"(value, key) in modelValue\" :key=\"key\">\n                <div class=\"mb-2\">\n                  <div class=\"flex items-center justify-between mb-1\">\n                    <label class=\"text-xs font-medium text-gray-700\">\n                      {{ key }}\n                      <span v-if=\"mandatoryFields.includes(key)\" class=\"text-red-500\">*</span>\n                    </label>\n                  </div>\n                  <select\n                    v-if=\"['key_unique', 'tag_strict'].includes(key) || key === 'tagging_mode'\"\n                    :value=\"value\"\n                    @input=\"updateField(key, $event.target.value)\"\n                    class=\"w-full border rounded p-1 text-sm\"\n                    :class=\"{'border-red-500': mandatoryFields.includes(key) && !value}\"\n                  >\n                    <template v-if=\"['key_unique', 'tag_strict'].includes(key)\">\n                      <option value=\"Yes\">Yes</option>\n                      <option value=\"No\">No</option>\n                    </template>\n                    <template v-else>\n                      <option v-for=\"opt in ['min', 'max', 'end', 'none']\" :key=\"opt\" :value=\"opt\">\n                        {{ opt }}\n                      </option>\n                    </template>\n                  </select>\n                  <input\n                    v-else\n                    :value=\"value\"\n                    @input=\"updateField(key, $event.target.value)\"\n                    type=\"text\"\n                    class=\"w-full border rounded p-1 text-sm\"\n                    :class=\"{'border-red-500': mandatoryFields.includes(key) && !value}\"\n                    :placeholder=\"getDefaultValue(key)\"\n                  />\n                </div>\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { computed, ref, watch } from 'vue'\n  \n  export default {\n    name: 'ParserSection',\n    props: {\n      modelValue: {\n        type: Object,\n        required: true\n      },\n      mandatoryFields: {\n        type: Array,\n        required: true\n      },\n      isOpen: {\n        type: Boolean,\n        default: false\n      },\n      started: {\n        type: Boolean,\n        default: false\n      }\n    },\n    emits: ['update:modelValue', 'toggle-section', 'help', 'started'],\n    setup(props, { emit }) {\n      const isStarted = ref(props.started)\n  \n      // Watch for changes to the started prop\n      watch(() => props.started, (newValue) => {\n        isStarted.value = newValue\n      }, { immediate: true })\n  \n      const startNewParser = () => {\n        isStarted.value = true\n        emit('started', true)\n        emit('toggle-section', 'parser')\n      }\n  \n      const isParserSectionInvalid = computed(() => {\n        return props.mandatoryFields.some(field => \n          !props.modelValue[field] || props.modelValue[field].trim() === ''\n        )\n      })\n  \n      const getDefaultValue = (key) => {\n        const defaults = {\n          comment_mark: '#',\n          coor_x: 'COORX',\n          coor_y: 'COORY',\n          coor_z: 'COORZ',\n          geom_tag_point: '.',\n          geom_tag_line: '$',\n          geom_tag_poly: '@',\n          no_data: '-1'\n        }\n        return defaults[key] ? `Default: ${defaults[key]}` : ''\n      }\n  \n      const updateField = (key, value) => {\n        const updatedParser = { ...props.modelValue, [key]: value }\n        emit('update:modelValue', updatedParser)\n      }\n  \n      return {\n        isStarted,\n        startNewParser,\n        isParserSectionInvalid,\n        getDefaultValue,\n        updateField\n      }\n    }\n  }\n  </script>","import { render } from \"./ParserSection.vue?vue&type=template&id=fd04522e\"\nimport script from \"./ParserSection.vue?vue&type=script&lang=js\"\nexport * from \"./ParserSection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- components/FieldSection.vue -->\n<template>\n    <div \n      class=\"shadow mb-3 rounded-lg section\" \n      :class=\"isFieldSectionInvalid ? 'bg-red-100' : 'bg-white'\"\n    >\n      <div class=\"p-4\">\n        <!-- Header -->\n        <div \n          class=\"flex justify-between items-center cursor-pointer\"\n          @click=\"$emit('toggle-section', index)\"\n        >\n          <div class=\"flex items-center\">\n            <h3 class=\"text-lg font-semibold\">{{ $t('field.field_section')}} {{ index + 1 }} </h3>\n\n            <i \n            v-if=\"!isFieldSectionInvalid\"\n            class=\"pi pi-check-circle text-lg ml-2 text-green-500\"\n            ></i>\n            <i \n            v-if=\"isFieldSectionInvalid\"\n            class=\"pi pi-times text-lg ml-2 text-red-500\"\n            ></i>\n            <span class=\"ms-2 text-gray-400\">{{ modelValue.name }}</span>\n          </div>\n          <div class=\"flex items-center\">\n            <button \n              @click.stop=\"$emit('help', 'field')\" \n              class=\"text-blue-500 hover:text-blue-600 mr-2\"\n            >\n              <i class=\"pi pi-question-circle\"></i>\n            </button>\n            <button \n              @click.stop=\"$emit('remove', index)\" \n              class=\"text-red-500\"\n            >\n              <i class=\"pi pi-trash\"></i>\n            </button>\n            <i \n            class=\"pi pi-chevron-down text-lg ml-2 transform transition-transform\"\n            :class=\"{'rotate-180': isOpen}\"\n            ></i>\n          </div>\n        </div>\n  \n        <!-- Field Content -->\n        <div v-show=\"isOpen\" class=\"mt-4\">\n            <p class=\"text-gray-400 mb-4\">\n            Fill out the required <span class=\"text-red-300\">*</span> field configuration below.\n          </p>\n          <div class=\"grid grid-cols-2 gap-3\">\n            <!-- Name field -->\n            <div class=\"col-span-2\">\n              <label class=\"text-xs font-medium text-gray-700\">\n                Name\n                <span class=\"text-red-500\">*</span>\n              </label>\n              <input\n                :value=\"modelValue.name\"\n                @input=\"updateField('name', $event.target.value)\"\n                type=\"text\"\n                class=\"w-full border rounded p-1 text-sm\"\n                :class=\"{'border-red-500': !modelValue.name || validationErrors[`field-${index}`]}\"\n              />\n              <p v-if=\"validationErrors[`field-${index}`]\" class=\"text-xs text-red-500 mt-1\">\n                {{ validationErrors[`field-${index}`].join(', ') }}\n              </p>\n            </div>\n  \n            <!-- Info field -->\n            <div class=\"col-span-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Info</label>\n              <textarea\n                :value=\"modelValue.info\"\n                @input=\"updateField('info', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n                rows=\"2\"\n              ></textarea>\n            </div>\n  \n            <!-- Type field -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">\n                Type\n                <span class=\"text-red-500\">*</span>\n              </label>\n              <select \n                :value=\"modelValue.type\"\n                @change=\"updateField('type', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n              >\n                <option value=\"integer\">integer</option>\n                <option value=\"double\">double</option>\n                <option value=\"text\">text</option>\n              </select>\n            </div>\n  \n            <!-- Change Case field -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Change Case</label>\n              <select \n                :value=\"modelValue.change_case\"\n                @change=\"updateField('change_case', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n              >\n                <option value=\"lower\">lower</option>\n                <option value=\"upper\">upper</option>\n              </select>\n            </div>\n  \n            <!-- Empty Allowed field -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Empty Allowed</label>\n              <select \n                :value=\"modelValue.empty_allowed\"\n                @change=\"updateField('empty_allowed', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n              >\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </div>\n  \n            <!-- Merge Separators field -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Merge Separators</label>\n              <select \n                :value=\"modelValue.merge_separators\"\n                @change=\"updateField('merge_separators', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n              >\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </div>\n  \n            <!-- Persistent field -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Persistent</label>\n              <select \n                :value=\"modelValue.persistent\"\n                @change=\"updateField('persistent', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n              >\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </div>\n  \n            <!-- Skip field -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Skip</label>\n              <select \n                :value=\"modelValue.skip\"\n                @change=\"updateField('skip', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n              >\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </div>\n  \n            <!-- Unique field -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Unique</label>\n              <select \n                :value=\"modelValue.unique\"\n                @change=\"updateField('unique', $event.target.value)\"\n                class=\"w-full border rounded p-1 text-sm\"\n              >\n                <option value=\"yes\">yes</option>\n                <option value=\"no\">no</option>\n              </select>\n            </div>\n  \n            <!-- Quotation and Separator fields -->\n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Quotation</label>\n              <input\n                :value=\"modelValue.quotation\"\n                @input=\"updateField('quotation', $event.target.value)\"\n                type=\"text\"\n                class=\"w-full border rounded p-1 text-sm\"\n                placeholder=\"'\"\n              />\n            </div>\n  \n            <div class=\"mb-2\">\n              <label class=\"text-xs font-medium text-gray-700\">Separator</label>\n              <input\n                :value=\"modelValue.separator\"\n                @input=\"updateField('separator', $event.target.value)\"\n                type=\"text\"\n                class=\"w-full border rounded p-1 text-sm\"\n                placeholder=\";\"\n              />\n            </div>\n\n            <div class=\"col-span-2 mb-2\">\n  <div class=\"flex justify-between items-center\">\n    <label class=\"text-xs font-medium text-gray-700\">Aliases</label>\n    <span class=\"text-xs text-gray-400\">Optional</span>\n  </div>\n  <textarea\n    :value=\"modelValue.aliases\"\n    @input=\"updateField('aliases', $event.target.value)\"\n    class=\"w-full border rounded p-1 text-sm font-mono\"\n    :class=\"{\n      'border-red-500': aliasesValidationError || validationErrors[`field-${index}-aliases`]\n    }\"\n    rows=\"4\"\n    placeholder=\"@key=value&#10;@key2=value2&#10;@key3=value3\"\n    spellcheck=\"false\"\n  ></textarea>\n  <p v-if=\"aliasesValidationError || validationErrors[`field-${index}-aliases`]\" \n     class=\"text-xs text-red-500 mt-1\">\n    {{ aliasesValidationError || validationErrors[`field-${index}-aliases`] }}\n  </p>\n  <p class=\"text-xs text-gray-500 mt-1\">\n    Add one alias per line using the format @key=value\n  </p>\n</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { computed, ref, onUnmounted } from 'vue'\n  \n  export default {\n    name: 'FieldSection',\n    \n    props: {\n      modelValue: {\n        type: Object,\n        required: true,\n        default: () => ({\n          change_case: 'lower',\n          empty_allowed: 'no',\n          info: '',\n          merge_separators: 'no',\n          name: '',\n          persistent: 'no',\n          quotation: \"'\",\n          skip: 'no',\n          separator: ';',\n          type: 'text',\n          unique: 'no',\n          aliases: ''\n        })\n      },\n      index: {\n        type: Number,\n        required: true\n      },\n      isOpen: {\n        type: Boolean,\n        default: false\n      },\n      validationErrors: {\n        type: Object,\n        default: () => ({})\n      },\n      mandatoryFields: {\n        type: Array,\n        default: () => ['name', 'type']\n      }\n    },\n  \n    emits: ['update:modelValue', 'remove', 'toggle-section', 'help', 'validate'],\n  \n    setup(props, { emit }) {\n      const validationTimeout = ref(null)\n  \n      const updateField = (key, value) => {\n        const updatedField = { ...props.modelValue, [key]: value }\n        emit('update:modelValue', updatedField)\n  \n        if (validationTimeout.value) {\n          clearTimeout(validationTimeout.value)\n        }\n  \n        if (key === 'aliases') {\n          validationTimeout.value = setTimeout(() => {\n            emit('validate', props.index, 'aliases', value)\n          }, 300)\n        } else if (key === 'name') {\n          emit('validate', props.index, 'name', value)\n        }\n      }\n  \n      onUnmounted(() => {\n        if (validationTimeout.value) {\n          clearTimeout(validationTimeout.value)\n        }\n      })\n  \n      const isFieldSectionInvalid = computed(() => {\n        // Check for any validation errors for this field\n        const hasValidationError = Object.keys(props.validationErrors)\n          .some(key => key.startsWith(`field-${props.index}`))\n        \n        // Check mandatory fields\n        const hasMissingMandatory = props.mandatoryFields.some(fieldName => \n          !props.modelValue[fieldName] || props.modelValue[fieldName].trim() === ''\n        )\n  \n        return hasValidationError || hasMissingMandatory\n      })\n  \n      return {\n        isFieldSectionInvalid,\n        updateField\n      }\n    }\n  }\n  </script>","import { render } from \"./FieldSection.vue?vue&type=template&id=7ca4506d\"\nimport script from \"./FieldSection.vue?vue&type=script&lang=js\"\nexport * from \"./FieldSection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"flex justify-center my-6\">\n      <button\n        @click=\"$emit('add')\"\n        class=\"flex items-center gap-2 px-6 py-3 bg-gray-700 text-white rounded-full hover:bg-blue-700 transition-colors shadow-lg hover:shadow-xl\"\n      >\n        <i class=\"pi pi-plus text-xl\"></i>\n        {{$t('field.add_new_field_section')}}\n      </button>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'AddFieldButton',\n    emits: ['add']\n  }\n  </script>","import { render } from \"./AddFieldButton.vue?vue&type=template&id=b869270c\"\nimport script from \"./AddFieldButton.vue?vue&type=script&lang=js\"\nexport * from \"./AddFieldButton.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"flex h-screen flex-col\">\n      <!-- Header -->\n      <div class=\"bg-white p-4 border-b border-grey\">\n        <div class=\"mx-2 flex justify-between items-center\">\n          <!-- Logo -->\n          <h1 class=\"text-lg font-semibold\">\n            <i class=\"pi pi-bullseye me-3 text-black-500\"></i>\n            <a href=\"/\">Survey2GIS Parser Generator</a>\n          </h1>\n  \n          <!-- menu -->\n          <div class=\"flex items-center gap-6\">\n            <!-- Import Options Dropdown -->\n            <div class=\"relative\" v-click-outside=\"closeDropdown\">\n              <button\n                @click=\"isDropdownOpen = !isDropdownOpen\"\n                class=\"px-4 py-2 border border-gray-300 flex items-center gap-2 bg-white hover:bg-gray-50 w-full transition-colors duration-200 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <span class=\"text-gray-700 font-medium px-2\">{{ t('navigation.loadParser') }}</span>\n                <i \n                  class=\"pi pi-chevron-down text-gray-500 transition-transform duration-200\"\n                  :class=\"{'rotate-180': isDropdownOpen}\"\n                ></i>\n              </button>\n  \n              <!-- Dropdown Menu -->\n              <div \n                v-if=\"isDropdownOpen\"\n                class=\"absolute top-full left-0 mt-2 bg-white border border-gray-200 rounded-lg shadow-lg z-10 w-full overflow-hidden\"\n              >\n                <div class=\"py-1\">\n                  <label \n                    for=\"file-upload\" \n                    class=\"flex items-center px-4 py-3 hover:bg-gray-50 cursor-pointer w-full transition-colors duration-150\"\n                    :class=\"{ 'opacity-50 cursor-not-allowed': uploadisDisabled }\"\n                    @click.prevent=\"!uploadisDisabled && triggerFileUpload()\"\n                  >\n                    <i class=\"pi pi-upload text-blue-600 me-3\"></i>\n                    <span class=\"text-gray-700\">{{ t('navigation.uploadParser') }}</span>\n                  </label>\n                  \n                  <button\n                    class=\"w-full text-left flex items-center px-4 py-3 hover:bg-gray-50 transition-colors duration-150\"\n                    :class=\"{ 'opacity-50 cursor-not-allowed': uploadisDisabled }\"\n                    @click=\"!uploadisDisabled && loadSampleData()\"\n                  >\n                    <i class=\"pi pi-cloud-download text-blue-600 me-3\"></i>\n                    <span class=\"text-gray-700\">{{ t('navigation.loadSample') }}</span>\n                  </button>\n\n                  <button\n                    class=\"w-full text-left flex items-center px-4 py-3 hover:bg-gray-50 transition-colors duration-150\"\n                    :class=\"{ 'opacity-50 cursor-not-allowed': uploadisDisabled }\"\n\n                    @click=\"!uploadisDisabled && showRepository()\"\n                    >\n                    <i class=\"pi pi-database text-blue-600 me-3\"></i>\n                    <span class=\"text-gray-700\">{{ t('navigation.parser_repository') }}</span>\n                    </button>\n\n                    <button\n                      class=\"hidden w-full text-left flex items-center px-4 py-3 hover:bg-gray-50 transition-colors duration-150\"\n                      :class=\"{ 'opacity-50 cursor-not-allowed': uploadisDisabled }\"\n                      @click=\"!uploadisDisabled && showFormatDetector()\"\n                    >\n                      <i class=\"pi pi-search text-blue-600 me-3\"></i>\n                      <span class=\"text-gray-700\">{{ t('format.detected_input_format') }}</span>\n                    </button>\n\n                </div>\n              </div>\n  \n              <input\n                type=\"file\"\n                accept=\".ini,.txt\"\n                @change=\"handleFileUpload\"\n                class=\"hidden\"\n                ref=\"fileInput\"\n                id=\"file-upload\"\n              />\n            </div>\n  \n            <!-- Download Button -->\n            <button\n              @click=\"downloadIni\"\n              :disabled=\"!isFormValid\"\n              class=\"py-2 px-4 flex items-center gap-2 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2\"\n              :class=\"isFormValid \n                ? 'bg-green-600 hover:bg-green-700 text-white shadow-sm focus:ring-green-500' \n                : 'bg-gray-100 border border-gray-300 text-gray-400 cursor-not-allowed'\"\n            >\n              <i class=\"pi pi-download\"></i>\n              <span>{{ t('navigation.download') }}</span>\n            </button>\n  \n            <!-- Language Selector -->\n            <select\n              v-model=\"$i18n.locale\"\n              class=\"px-3 py-2 border border-gray-300 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              :class=\"{ 'hidden': uploadisDisabled }\"\n\n              >\n              <option value=\"en\">En</option>\n              <option value=\"de\">De</option>\n            </select>\n  \n            <!-- Help Links -->\n            <div class=\"flex items-center gap-4\">\n              <button \n                @click.stop=\"showHelp('imprint')\" \n                class=\"text-gray-600 hover:text-gray-900 transition-colors duration-200 text-sm font-medium\"\n              >\n                {{ t('navigation.imprint') }}\n              </button>\n  \n              <button \n                @click.stop=\"showHelp('help')\" \n                class=\"text-gray-600 hover:text-gray-900 transition-colors duration-200 text-sm font-medium\"\n              >\n                {{ t('navigation.help') }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n  \n      <!-- Main Content -->\n      <div class=\"flex flex-1 overflow-hidden\">\n        <!-- Left Panel -->\n        <div class=\"w-1/2 p-4 bg-gray-100 overflow-auto left-panel ps-6 pe-6 pt-6\" id=\"left_panel\">\n          <!-- Parser Section Card -->\n          <ParserSection\n          v-model=\"parserSection\"\n                :mandatory-fields=\"MANDATORY_FIELDS.parser\"\n                :is-open=\"openSection === 'parser'\"\n                :show-start-label=\"showStartLabel\"\n                :started=\"hasStarted\" \n                @toggle-section=\"handleToggleSection\"\n                @help=\"showHelp\"\n                @started=\"hasStarted = true\"\n          />\n  \n          <!-- Field Sections -->\n          <template v-for=\"(field, index) in fieldSections\" :key=\"index\">\n            <FieldSection\n              v-model=\"fieldSections[index]\"\n              :index=\"index\"\n              :is-open=\"openSection === index\"\n              :validation-errors=\"validationErrors\"\n              :mandatory-fields=\"MANDATORY_FIELDS.field\"\n              @toggle-section=\"handleToggleSection\"\n              @help=\"showHelp\"\n              @remove=\"removeFieldSection\"\n              @validate=\"validateField\"\n            />\n          </template>\n  \n          <!-- Add Field Button -->\n          <AddFieldButton \n            v-if=\"hasStarted\"\n            @add=\"addFieldSection\"\n          />\n        </div>\n  \n        <!-- Right Panel -->\n        <div class=\"w-1/2 flex flex-col pb-4 ps-4\" id=\"right_panel\">\n          <div class=\"flex-grow overflow-auto code__wrapper\">\n            <pre class=\"rounded-lg\"><code class=\"language-ini code__field\">{{ generatedIni }}</code></pre>\n          </div>\n        </div>\n      </div>\n  \n        <!-- Sidebar -->\n        <DynamicSidebar \n            v-if=\"showSidebar\"\n            :title=\"sidebarConfig.title\"\n            :component=\"sidebarConfig.component\"\n            :component-props=\"{\n            ...sidebarConfig.props,\n            onSelectParser: handleParserSelection\n            }\"\n            @close=\"closeSidebar\"\n        />\n\n      <!-- Guide Notification -->\n      <div\n        v-if=\"showToast\"\n        class=\"fixed bottom-4 right-4 bg-white shadow-lg rounded-lg p-4 max-w-md border border-gray-200 transform transition-all duration-500 ease-in-out z-50\"\n        :class=\"showToast ? 'translate-y-0 opacity-100' : 'translate-y-full opacity-0'\"\n      >\n        <div class=\"flex items-start\">\n          <div class=\"flex-1 mr-4\">\n            <p class=\"text-gray-900\">\n              👋 Welcome! New here? Start  \n              <a \n                href=\"#\" \n                @click.prevent=\"showHelp('help')\" \n                class=\"text-blue-600 hover:text-blue-800 underline cursor-pointer\"\n              >\n                here\n              </a> \n            </p>\n          </div>\n          <button\n            @click=\"closeToast\"\n            class=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            ✕\n          </button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { setupPrism } from './utils/prism-setup'\nimport { useParser } from './composables/useParser'\nimport { useFields } from './composables/useFields'\nimport { useUI } from './composables/useUI'\nimport { useFileHandler } from './composables/useFileHandler'\nimport { useIniGenerator } from './composables/useIniGenerator'\nimport { MANDATORY_FIELDS } from './constants/parser'\n\nimport DynamicSidebar from './components/DynamicSidebar.vue'\nimport ParserSection from './components/ParserSection.vue'\nimport FieldSection from './components/FieldSection.vue'\nimport AddFieldButton from './components/AddFieldButton.vue'\n\nimport 'primeicons/primeicons.css'\nimport 'prismjs/themes/prism-tomorrow.css'\n\n// Initialize Prism and i18n\nsetupPrism()\nconst { t } = useI18n()\nconst hasStarted = ref(false)\n\n// Initialize composables\nconst { parserSection, resetParser } = useParser()\n\nconst handleParserSelection = async ({ content }) => {\n  try {\n    await parseIniContent(content)\n    closeSidebar()\n    closeDropdown()\n  } catch (error) {\n    console.error('Error loading parser:', error)\n  }\n}\n\nconst { \n  fieldSections, \n  validationErrors, \n  validateField, \n  addFieldSection, \n  removeFieldSection \n} = useFields()\n\n\nconst {\n  generatedIni,\n  downloadIni\n} = useIniGenerator(parserSection, fieldSections)\n\nconst { \n  showSidebar, \n  showRepository,\n  sidebarConfig, \n  showStartLabel,\n  isDropdownOpen,\n  showToast,\n  openSection,\n  showHelp,\n  closeSidebar,\n  closeToast, \n  closeDropdown,\n  toggleSection,\n  showFormatDetector\n} = useUI()\n\nconst {\n  uploadisDisabled,\n  handleFileUpload,\n  loadSampleData,\n  triggerFileUpload,\n  parseIniContent\n} = useFileHandler({\n  parserSection,\n  fieldSections,\n  hasStarted,\n  openSection,\n  resetParser,\n  validationErrors,\n  addFieldSection,\n  validateField\n})\n\n\n\nconst handleToggleSection = (section) => {\n  toggleSection(section, generatedIni.value)\n}\n\n// Form validation\nconst isFormValid = computed(() => {\n  const isParserValid = Object.entries(parserSection.value)\n    .filter(([key]) => MANDATORY_FIELDS.parser.includes(key))\n    .every(([, value]) => value && value.trim() !== '')\n\n  const areFieldsValid = fieldSections.value.length > 0 && \n    !Object.keys(validationErrors.value).length &&\n    fieldSections.value.every(field => \n      field.name && field.name.trim() !== '' &&\n      field.type && field.type.trim() !== ''\n    )\n\n  return isParserValid && areFieldsValid\n})\n\n// Setup\nonMounted(() => {\n  showToast.value = true\n  setTimeout(() => {\n    closeToast()\n  }, 10000)\n})\n</script>\n\n<style>\n#right_panel {\n  background: #2d2d2d;\n}\n\n.code__wrapper pre {\n  margin: 0;\n  padding: 1rem;\n}\n\n.code__wrapper pre code {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;\n  font-size: 0.875rem;\n  line-height: 1.5;\n}\n\n.token.section {\n  color: #79b8ff !important;\n}\n\n.token.key {\n  color: #e1e4e8 !important;\n}\n\n.token.value {\n  color: #85e89d !important;\n}\n\n.token.comment {\n  color: #959da5 !important;\n  font-style: italic;\n}\n\n\n/* Global scrollbar styling */\n* {\n  scrollbar-width: thin; /* Firefox */\n  scrollbar-color: transparent transparent; /* Firefox */\n}\n\n*:hover {\n  scrollbar-color: rgba(0, 0, 0, 0.3) transparent; /* Firefox */\n}\n\n/* Webkit scrollbar styling */\n::-webkit-scrollbar {\n  width: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: transparent;\n  border-radius: 3px;\n  transition: background-color 0.3s;\n}\n\n*:hover::-webkit-scrollbar-thumb {\n  background-color: rgba(0, 0, 0, 0.3);\n}\n\n*:hover::-webkit-scrollbar-thumb:hover {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=e278f678&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default {\n    add_new_field_section: \"Neue Feld Sektion anlegen\",\n    field_section: \"Feld Bereich\"\n  }","export default {\n    title: 'Erkennungsprogramm für Umfragedatenformate',\n    paste_label: 'Fügen Sie hier Ihre Umfragedaten ein',\n    placeholder: 'Fügen Sie Zeilen aus Ihren Tachymeter-Daten ein...',\n    analyze: 'Format analysieren',\n    results: 'Analyseergebnisse',\n    detected_mode: 'Erkannter Modus',\n    explanation: 'Erklärung',\n    feature_counts: 'Anzahl der Features',\n    points: 'Punkte',\n    lines: 'Linien',\n    polygons: 'Polygone',\n    found_codes: 'Gefundene Feature-Codes',\n    no_codes_min_mode: 'Keine Feature-Codes in den folgenden Zeilen sichtbar bei Verwendung des Min-Modus - nur die erste Zeile enthält vollständige Informationen.',\n    separator: 'Trennzeichen',\n    parser_note_title: 'Wichtiger Hinweis zur Parser-Konfiguration',\n    parser_note_content: 'Der erkannte Modus muss mit Ihrer Parser-Konfiguration übereinstimmen, damit die Daten korrekt interpretiert werden. Stellen Sie sicher, dass Sie den entsprechenden tagging_mode in Ihrer Parser-Datei basierend auf dieser Analyse festlegen.',\n    no_markers: 'Keine Geometriemarkierungen gefunden. Dies scheint der \"None\"-Modus für punktbasierte Daten zu sein.',\n    end_mode_detected: 'Geometriemarkierung nur am Ende der Datenfolge gefunden. Dies deutet auf den \"End\"-Modus hin.',\n    min_mode_detected: 'Geometriemarkierung nur am Anfang der Datenfolge gefunden. Dies deutet auf den \"Min\"-Modus hin.',\n    max_mode_detected: 'Geometriemarkierungen im gesamten Datensatz gefunden. Dies deutet auf den \"Max\"-Modus hin.',\n    detected_input_format: 'Eingabe analysieren'\n  }","export default {\n  language: 'Sprache',\n  loadParser: 'Parser-Datei laden',\n  uploadParser: 'Parser-Datei hochladen',\n  loadSample: 'Beispieldaten laden',\n  download: 'Parser-Datei herunterladen',\n  imprint: 'Impressum',\n  help: 'Hilfe',\n  parser_repository: 'Parser Verzeichnis',\n  welcome: {\n    message: 'Willkommen! Neu hier? Starten Sie',\n    here: 'hier'\n  },\n  repository: {\n    helpText: 'Dieser Bereich ermöglicht es Ihnen, Parser-Konfigurationen aus dem Community-Repository zu laden',\n    contributeText: 'Möchten Sie Ihren eigenen Parser teilen? Besuchen Sie das Repository für Informationen, wie Sie Ihre Konfigurationen beitragen können, um der Community zu helfen.'\n  }\n}","export default {\n  startNew: 'Neue Parser-Datei erstellen',\n  section: 'Parser Bereich',\n  required: 'Füllen Sie die erforderlichen * Feldkonfigurationen unten aus.',\n  code_comment: 'Hier erscheinst eine Voransicht des generierten Parser Codes'\n}","import field from '../messages/field/de'\nimport format from '../messages/format/de'\nimport navigation from '../messages/navigation/de'\nimport parser from '../messages/parser/de'\n\nexport default {\n  navigation,\n  parser,\n  field,\n  format\n}","export default {\n    add_new_field_section: \"Add New Field Section\",\n    field_section: \"Field section\"\n}","export default {\n    title: 'Survey Data Format Detector',\n    paste_label: 'Paste your survey data here',\n    placeholder: 'Paste lines from your total station data...',\n    analyze: 'Analyze Format',\n    results: 'Analysis Results',\n    detected_mode: 'Detected Mode',\n    explanation: 'Explanation',\n    feature_counts: 'Feature Counts',\n    points: 'Points',\n    lines: 'Lines',\n    polygons: 'Polygons',\n    found_codes: 'Found Feature Codes',\n    no_codes_min_mode: 'No feature codes visible in following lines when using Min mode - only first line contains full information.',\n    separator: 'Separator',\n    parser_note_title: 'Important Parser Configuration Note',\n    parser_note_content: 'The detected mode must match your parser configuration for correct data interpretation. Make sure to set the appropriate tagging_mode in your parser file based on this analysis.',\n    no_markers: 'No geometry markers found. This appears to be \"None\" mode for point-only data.',\n    end_mode_detected: 'Geometry marker found only at the end of the data sequence. This indicates \"End\" mode.',\n    min_mode_detected: 'Geometry marker found only at the start of the data sequence. This indicates \"Min\" mode.',\n    max_mode_detected: 'Geometry markers found throughout the data. This indicates \"Max\" mode.',\n    detected_input_format: 'Analyze input'\n}","export default {\n  language: 'Language',\n  loadParser: 'Load Parser File',\n  uploadParser: 'Upload parser file',\n  loadSample: 'Load sample data',\n  download: 'Download parser file',\n  imprint: 'Imprint',\n  help: 'Help',\n  parser_repository: 'Parser Repository',\n  welcome: {\n  message: 'Welcome! New here? Start',\n  here: 'here'\n  },\n  repository: {\n    helpText: 'This section allows you to load parser configurations from the community repository.',\n    contributeText: 'Want to share your own parser? Visit the repository for information on how to contribute your configurations to help the community.'\n  }\n}","export default {\n  startNew: 'Start New Parser File',\n  section: 'Parser Section',\n  required: 'Fill out the required * field configuration below.',\n  code_comment: 'you will see a preview of your parser file here',\n}","import field from '../messages/field/en'\nimport format from '../messages/format/en'\nimport navigation from '../messages/navigation/en'\nimport parser from '../messages/parser/en'\n\nexport default {\n  navigation,\n  parser,\n  field,\n  format\n}","import { createI18n } from 'vue-i18n'\nimport de from './locales/de'\nimport en from './locales/en'\n\nexport default createI18n({\n  legacy: false,\n  locale: 'en',\n  fallbackLocale: 'en',\n  messages: {\n    en,\n    de\n  }\n})","import './assets/tailwind.css'\n\nimport App from './App.vue'\nimport { createApp } from 'vue'\nimport i18n from './i18n'\n\nconst app = createApp(App)\n\n// Register directive before mounting\napp.directive('click-outside', {\n  mounted(el, binding) {\n    el._clickOutside = (event) => {\n      // Check if binding.value is a function before calling it\n      if (!(el === event.target || el.contains(event.target))) {\n        if (typeof binding.value === 'function') {\n          binding.value(event)\n        }\n      }\n    }\n    document.body.addEventListener('click', el._clickOutside)\n  },\n  unmounted(el) {\n    if (el._clickOutside) {\n      document.body.removeEventListener('click', el._clickOutside)\n      delete el._clickOutside\n    }\n  }\n})\n\napp.use(i18n)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunks2g_parser_generator\"] = self[\"webpackChunks2g_parser_generator\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6576); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["setupPrism","Prism","ini","pattern","inside","alias","additionalStyles","styleElement","document","createElement","textContent","head","appendChild","highlightElement","element","MANDATORY_FIELDS","parser","field","DEFAULT_VALUES","comment_mark","coor_x","coor_y","coor_z","geom_tag_point","geom_tag_line","geom_tag_poly","no_data","DEFAULT_FIELD","name","change_case","empty_allowed","info","merge_separators","persistent","quotation","skip","separator","type","unique","aliases","useParser","parserSection","ref","key_field","key_unique","tag_field","tagging_mode","tag_strict","resetParser","Object","keys","value","forEach","key","validateFieldName","errors","length","push","test","validateAliases","lines","split","filter","line","trim","lowercaseKeys","Set","startsWith","equalIndex","indexOf","keyPart","substring","keyWithoutTrim","lowercaseKey","toLowerCase","has","add","useFields","fieldSections","validationErrors","cleanupValidationErrors","removedIndex","newErrors","entries","fieldMatch","match","fieldIndex","parseInt","newIndex","newKey","replace","removeFieldSection","splice","validateField","fieldName","errorKey","aliasError","addFieldSection","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","$t","_hoisted_3","_hoisted_4","_cache","$event","$data","inputData","rows","placeholder","_hoisted_5","onClick","args","$options","analyzeFormat","disabled","_hoisted_6","result","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","mode","_hoisted_13","_hoisted_14","_hoisted_15","explanation","_createCommentVNode","data","methods","console","log","this","isComment","isDescriptive","isEndMode","isMinMode","isMaxMode","currentKeyField","index","parts","keyFieldWithMarker","coords","hasMarker","includes","lastThreeParts","slice","some","part","isNaN","parseFloat","isPolygonDetected","reducedRecordDetected","isReducedRecord","every","sharedCode","lineNumber","keyField","geometryMarker","coordinates","__exports__","render","props","__props","activeTab","watch","section","newSection","mapping","immediate","openTab","tabName","__expose","locale","useI18n","localizedComponent","computed","HelpSidebarDe","HelpSidebarEn","async","fetchParserData","jsonResponse","fetch","ok","Error","parserList","json","map","id","author","description","filename","error","fetchParserContent","cleanPath","response","text","parsers","searchTerm","loading","filteredParsers","term","onMounted","err","emit","__emit","selectParser","content","message","useUI","showSidebar","sidebarConfig","title","component","showStartLabel","isDropdownOpen","showToast","openSection","scrollToSection","iniContent","nextTick","codeWrapper","querySelector","codeElement","targetLineIndex","findIndex","currentField","styles","window","getComputedStyle","lineHeight","wrapperPadding","paddingTop","targetPosition","scrollTo","top","Math","max","behavior","setTimeout","leftPanel","targetSection","sections","Array","from","querySelectorAll","leftPanelTop","getBoundingClientRect","sectionTop","scrollTop","currentScroll","wrapperHeight","clientHeight","totalHeight","showFormatDetector","FormatDetector","closeDropdown","showHelp","titles","imprint","help","HelpSidebar","showComponent","closeSidebar","closeToast","toggleSection","wasOpen","showRepository","ParserRepository","readFileContent","file","Promise","resolve","reject","reader","FileReader","onload","event","target","onerror","readAsText","useFileHandler","hasStarted","fileError","uploadisDisabled","handleFileUpload","files","endsWith","parseIniContent","loadSampleData","samplePath","then","catch","currentSection","currentAliases","currentFieldIndex","aliasesString","join","validationError","valueParts","trimmedKey","triggerFileUpload","click","useIniGenerator","generatedIni","generateIni","parserEntries","regularFields","validAliases","deep","downloadIni","blob","Blob","url","URL","createObjectURL","link","href","download","body","removeChild","revokeObjectURL","$setup","isStarted","startNewParser","_createTextVNode","_normalizeClass","isParserSectionInvalid","$emit","_withModifiers","$props","isOpen","_Fragment","_renderList","modelValue","mandatoryFields","onInput","updateField","opt","_hoisted_16","getDefaultValue","_hoisted_17","required","Boolean","default","started","emits","setup","newValue","defaults","updatedParser","isFieldSectionInvalid","onChange","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","aliasesValidationError","spellcheck","_hoisted_34","_hoisted_35","Number","validationTimeout","updatedField","clearTimeout","onUnmounted","hasValidationError","hasMissingMandatory","t","handleParserSelection","handleToggleSection","isFormValid","isParserValid","areFieldsValid","add_new_field_section","field_section","paste_label","analyze","results","detected_mode","feature_counts","points","polygons","found_codes","no_codes_min_mode","parser_note_title","parser_note_content","no_markers","end_mode_detected","min_mode_detected","max_mode_detected","detected_input_format","language","loadParser","uploadParser","loadSample","parser_repository","welcome","here","repository","helpText","contributeText","startNew","code_comment","navigation","format","createI18n","legacy","fallbackLocale","messages","en","de","app","createApp","App","directive","mounted","el","binding","_clickOutside","contains","addEventListener","unmounted","removeEventListener","use","i18n","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}